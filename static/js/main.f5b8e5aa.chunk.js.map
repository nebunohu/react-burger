{"version":3,"sources":["components/conspructor-ingredient-item/constructor-ingredient-item.module.css","components/modal-overlay/modal-overlay.module.css","pages/constructor/constructor.module.css","components/profile-orders/profile-orders.module.css","pages/ingredient/ingredient.module.css","components/scrolled-container/scrolled-container.module.css","components/app/app.module.css","pages/profile/profile.module.css","components/ingredient-details/ingredient-details.module.css","components/app-header/app-header.module.css","pages/feed/feed.module.css","hooks/hooks.ts","components/app-header/app-header.tsx","utils/url.ts","services/actions/user-actions.ts","services/actions/auth-actions.ts","pages/login/login.tsx","utils/token.ts","services/actions/burger-actions.ts","components/ingredients-item/ingredients-item.tsx","services/actions/constructor-tab-actions.ts","components/ingredients-type/ingredients-type.tsx","components/burger-ingredients/burger-ingredients.tsx","components/conspructor-ingredient-item/constructor-ingredient-item.tsx","components/burger-constructor/burger-constructor.tsx","images/done.svg","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","pages/constructor/constructor.tsx","services/actions/register-actions.ts","pages/register/register.tsx","services/actions/password-actions.ts","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-form/profile-form.tsx","services/actions/ws-actions.ts","components/orders-ingredient-image/orders-ingredient-image.tsx","components/status-component/status-component.tsx","utils/time.ts","components/feed-order/feed-order.tsx","components/profile-orders/profile-orders.tsx","pages/profile/profile.tsx","pages/not-found-404/not-found-404.tsx","pages/feed/feed.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient/ingredient.tsx","components/protected-route/protected-route.tsx","components/burger-composition-element/burger-composition-enement.tsx","components/scrolled-container/scrolled-container.tsx","pages/order-details-page/order-details-page.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/constuctor-tab-reducer.ts","services/reducers/password-reducer.ts","services/reducers/user-reducer.ts","services/reducers/auth-reducer.ts","services/reducers/register-reducer.ts","services/reducers/order-reducer.ts","services/reducers/ws-reducer.ts","services/reducers/index.ts","index.tsx","redux/middleware/socket-middleware.ts","components/burger-constructor/burger-constructor.module.css","components/feed-order/feed-order.module.css","components/order-details/order-details.module.css","components/orders-ingredient-image/orders-ingredient-image.module.css","pages/order-details-page/order-details-page.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredients-item/ingredients-item.module.css","components/modal/modal.module.css","components/profile-form/profile-form.module.css","components/burger-composition-element/burger-composition-element.module.css","pages/login/login.module.css","components/ingredients-type/ingredients-type.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/status-component/status-component.module.css","pages/not-found-404/not-found-404.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","state","useLocation","pathname","split","className","headerStyles","headerUl","listElement","linkActive","link","to","type","logo","profile","API_URL","SET_USER","RESET_USER","GET_USER_REQUEST","GET_USER_REQUEST_SUCCESS","GET_USER_REQUEST_FAILED","SET_IS_USER_LOADED","RESET_IS_USER_LOADED","SET_IS_AUTH","RESET_IS_AUTH","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_REQUEST_SUCCESS","REFRESH_TOKEN_REQUEST_FAILED","LOGIN_REQUEST","LOGIN_REQUEST_REQUEST_SUCCESS","LOGIN_REQUEST_REQUEST_FAILED","checkAuth","dispatch","a","localStorage","getItem","LoginPage","useState","email","password","formState","setFormState","auth","store","location","handleChange","e","target","name","value","from","fromLoginRedirect","backgroundProtected","background","replace","loginStyles","loginFormWrapper","form","onSubmit","body","preventDefault","headers","Headers","fetch","method","mode","JSON","stringify","res","ok","json","data","success","setItem","refreshToken","accessToken","user","Error","console","log","placeholder","onChange","size","message","ADD_INGREDIENT","DELETE_INGREDIENT","SET_BURGER_NAME","SET_CURRENT_INGREDIENT","UPDATE_BURGER_INGREDIENTS","GET_INGREDIENTS_API_REQUEST","GET_INGREDIENTS_API_REQUEST_SUCCESS","GET_INGREDIENTS_API_REQUEST_FAILED","POST_ORDER_REQUEST","POST_ORDER_REQUEST_SUCCESS","POST_ORDER_REQUEST_FAILED","OPEN_INGREDIENTS_MODAL","OPEN_ORDER_MODAL","CLOSE_MODAL","IngredientsItem","item","burgerIngredientsCounts","burger","ingredientsCounts","current","find","el","id","_id","count","navigate","useNavigate","useDrag","dragRef","itemStyles","itemWrapper","ref","onClick","ingredient","src","image","alt","price","UPDATE_CURRENT_TAB","IngredientsType","props","ingredients","arrayOfElements","forEach","push","useInView","threshold","inView","entry","React","useEffect","ratio","intersectionRatio","typeStyles","typeWrapper","itemsWrapper","map","BurgerIngredients","tabsState","tabs","reduce","tab","title","bunRef","useRef","sauceRef","mainRef","setTab","scrollIntoView","behavior","ingredientsStyles","burgerIngredientsWrapper","table","active","scrolledWindow","reference","ConstructorIngredientItem","index","burgerIngredients","moveItem","useCallback","dragIndex","hoverIndex","dragItem","update","$splice","useDrop","accept","hover","monitor","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","dropTarget","collect","isDragging","opacity","constructorElementWrapper","style","cursor","text","thumbnail","handleClose","BurgerConstructor","bunName","bunPrice","bunImage","openOrderModal","drop","itemId","onDropHandler","getItemType","isHover","isOver","bun","wrapperClassName","constructorStyles","burgerConstructorWrapper","length","bunConstructor","isLocked","innerWrapper","totalWrapper","total","totalPrice","buttonWrapper","OrderDetails","order","orderPostRequest","orderDetailsStyles","number","preloaderText","done","doneImage","textRow1","textRow2","ModalOverlay","closeModal","children","modalOverlayRef","createRef","modalOverlayStyles","back","Modal","portalDiv","document","getElementById","focus","ReactDOM","createPortal","modalStyles","modalWrapper","onKeyDown","key","tabIndex","closeButtonWrapper","modalHeader","ConstructorPage","DndProvider","backend","HTML5Backend","cnstructorStyles","burgerWrapper","token","fetchData","concat","orderNumber","modal","isModalOpen","isOrderModal","REGISTER_USER_REQUEST","REGISTER_USER_REQUEST_SUCCESS","REGISTER_USER_REQUEST_FAILED","RegisterPage","isAuth","registerStyles","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_REQUEST_SUCCESS","FORGOT_PASSWORD_REQUEST_FAILED","FORGOT_PASSWORD_REDIRECT_CLEAR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_REQUEST_SUCCESS","RESET_PASSWORD_REQUEST_FAILED","ForgotPasswordPage","fromForgotPasswordRedirect","forgotPassStyles","ResetPasswordPage","isRedirect","fromResetPasswordRedirect","resetPassStyles","ProfileForm","isEdit","setIsEdit","changedFormElements","setChangedFormElements","includes","profileFormStyles","propertiesFormWrapper","onFocus","editUser","icon","buttonsWrapper","WS_CONNECTION_START","WS_CONNECTION_START_WITH_TOKEN","WS_GET_MESSAGE","WS_CONNECTION_CLOSE","indexes","OrdersIngredientImage","zIndex","remainCount","imageStyle","wrapper","overlay","wrapperBlock","StatusComponent","status","styles","returnString","displayStatus","dateOutput","date","orderTime","moment","Date","locale","calendar","FeedOrder","totalCost","prev","currEl","foundIngredient","feedOrderStyles","header","createdAt","burgerInfo","burgerStack","ingredId","currentIngredient","ProfileOrders","ws","orders","wsConnected","payload","profileOrdersStyles","reverse","ProfilePage","logoutHandler","removeItem","profileStyles","profileWrapper","menuWrapper","listItem","itemLink","activeListItem","note","NotFound404","notFoundStyles","noticeWrapper","notice","FeedPage","totalToday","feedPageStyles","container","feedHeader","ordersInfoWrapper","ordersListsWrapper","readyOrdersWrapper","readyOrderslist","filter","readyOrdersListItems","inProgressOrdersWrapper","inProgressOrderslist","IngredientDetails","urlId","Object","keys","setCurrentIngredient","ingredientdDetailsStyles","imageWrapper","image_large","nameWrapper","infoWrapper","caloriesWrapper","li","substance","calories","proteins","fat","carbohydrates","IngredientPage","ingredientStyles","ProtectedRoute","init","BurgerCompositionElement","ingredientId","costWrapper","ScrolledContainer","scrolledContainer","OrderDetailsPage","ingredientsAll","parseInt","section","currentOrder","arr","uniqueItems","result","uniqueItemsOf","undefined","nunber","compositionWrapper","footer","App","resData","root","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","constructorTabReducer","action","tempState","indexOf","forgotPasswordRequest","forgotPasswordRequestFailed","resetPasswordRequest","resetPasswordRequestFailed","getUserRequest","getUserRequestFailed","isUserLoaded","refreshTokenRequest","refreshTokenRequestFailed","loginRequest","loginRequestFailed","registerUserRequest","registerUserRequestFailed","orderReducer","isIngredModal","ingredientsRequest","ingredientsRequestFailed","orderPostRequestFailed","addIngredient","burgerState","currentItem","previousValue","rootReducer","combineReducers","currentItemPrice","splice","currentIndex","findIndex","currentCount","register","wsActions","wsInit","wsInitWithToken","wsClose","onOpen","onMessage","composedEnhancers","composeWithDevTools","applyMiddleware","thunkMiddleware","wsUrl","socket","next","WebSocket","close","onopen","event","onmessage","parse","onclose","socketMiddleware","createStore","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.f5b8e5aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructorElementWrapper\":\"constructor-ingredient-item_constructorElementWrapper__3hPRu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"modal-overlay_back__76w89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerWrapper\":\"constructor_burgerWrapper__2VnEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrolledWindow\":\"profile-orders_scrolledWindow__2UYSI\",\"link\":\"profile-orders_link__TxlSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ingredient_modal__3gPcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrolledContainer\":\"scrolled-container_scrolledContainer__IZ--Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app_root__ToTUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"profile_profileWrapper__OAFY9\",\"propertiesFormWrapper\":\"profile_propertiesFormWrapper__jreI_\",\"form\":\"profile_form__Q75bM\",\"menuWrapper\":\"profile_menuWrapper__3Bf1P\",\"listItem\":\"profile_listItem__1I3n8\",\"activeListItem\":\"profile_activeListItem__3N1eo\",\"itemLink\":\"profile_itemLink__27a4Q\",\"note\":\"profile_note__3oUSb\",\"buttonsWrapper\":\"profile_buttonsWrapper__2Rb3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"ingredient-details_infoWrapper__15raj\",\"proteinWrapper\":\"ingredient-details_proteinWrapper__3ig2c\",\"li\":\"ingredient-details_li__1B6hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"app-header_link__2KS0R\",\"linkActive\":\"app-header_linkActive__27Lwe app-header_link__2KS0R\",\"headerUl\":\"app-header_headerUl__ruGGP\",\"listElement\":\"app-header_listElement__3oB1Q\",\"active\":\"app-header_active__39C_m\",\"logo\":\"app-header_logo__3YP0q\",\"profile\":\"app-header_profile__1Svz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__sKYGS\",\"wrapper\":\"feed_wrapper__1R8eJ\",\"number\":\"feed_number__10q2w\",\"ordersFeedWrapper\":\"feed_ordersFeedWrapper__2Zmyp\",\"ordersInfoWrapper\":\"feed_ordersInfoWrapper__2o4tv\",\"ordersListsWrapper\":\"feed_ordersListsWrapper__1Cdtp\",\"readyOrdersWrapper\":\"feed_readyOrdersWrapper__15mxL\",\"readyOrdersListItems\":\"feed_readyOrdersListItems__3bZju\",\"inProgressOrdersWrapper\":\"feed_inProgressOrdersWrapper__R948C feed_readyOrdersWrapper__15mxL\",\"scrolledWindow\":\"feed_scrolledWindow__wTBKw\",\"readyOrderslist\":\"feed_readyOrderslist__2sSVn\",\"inProgressOrderslist\":\"feed_inProgressOrderslist__7Ajns feed_readyOrderslist__2sSVn\"};","import { AppThunk, AppDispatch } from './../types/index';\r\nimport { \r\n  TypedUseSelectorHook, \r\n  useSelector as selectorHook,\r\n  useDispatch as dispatchHook\r\n} from \"react-redux\";\r\nimport { TRootState } from \"../types\";\r\n\r\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorHook;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import React, { FC } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Styles\r\nimport headerStyles from './app-header.module.css';\r\n\r\n// Components\r\nimport { Logo, BurgerIcon, ListIcon , ProfileIcon  } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n\r\nconst AppHeader: FC = () => {\r\n  const location = useLocation();\r\n  const state = location.pathname.split('/')[1];\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <ul className={headerStyles.headerUl}>\r\n          <li className={`${headerStyles.listElement}`}>\r\n            <Link className={`${state === '' ? headerStyles.linkActive : headerStyles.link}`} to='/'>\r\n              <BurgerIcon type={state === '' ? 'primary' : 'secondary'} /> <span className='ml-2'>Конструктор</span>\r\n            </Link>\r\n          </li>\r\n          <li className={`${headerStyles.listElement}`}>\r\n            <Link className={`${state === 'feed' ? headerStyles.linkActive : headerStyles.link}`} to='/feed'>\r\n              <ListIcon type={state === 'feed' ? 'primary' : 'secondary'}/> <span className='ml-2'>Лента заказов</span>\r\n            </Link>\r\n          </li>\r\n          <li className={`${headerStyles.logo} ${headerStyles.listElement}`}>\r\n            <Link to='/' >\r\n              <Logo />\r\n            </Link>          \r\n          </li>\r\n          <li className={`${headerStyles.profile} ${headerStyles.listElement}`}>\r\n            <Link className={`${state === 'profile' ? headerStyles.linkActive : headerStyles.link}`} to='/profile'>\r\n              <ProfileIcon type={state === 'profile' ? 'primary' : 'secondary'}/> <span className='ml-2'>Личный кабинет</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n\r\n}\r\n\r\nexport default AppHeader;","export const API_URL: string = 'https://norma.nomoreparties.space/api';\r\nexport const WS_API_URL: string = 'wss://norma.nomoreparties.space';","import { AppDispatch, AppThunk } from \"../../types\";\r\nimport { API_URL } from \"../../utils/url\";\r\nimport { SET_IS_AUTH } from \"./auth-actions\";\r\n\r\nexport const SET_USER: \"SET_USER\" = \"SET_USER\";\r\nexport const RESET_USER: 'RESET_USER' = 'RESET_USER';\r\nexport const GET_USER_REQUEST:\"GET_USER_REQUEST\" = \"GET_USER_REQUEST\";\r\nexport const GET_USER_REQUEST_SUCCESS: \"GET_USER_REQUEST_SUCCESS\" = \"GET_USER_REQUEST_SUCCESS\";\r\nexport const GET_USER_REQUEST_FAILED: \"GET_USER_REQUEST_FAILED\" = \"GET_USER_REQUEST_FAILED\";\r\n\r\nexport const EDIT_USER_REQUEST: \"EDIT_USER_REQUEST\" = \"EDIT_USER_REQUEST\";\r\nexport const EDIT_USER_REQUEST_SUCCESS: \"EDIT_USER_REQUEST_SUCCESS\" = \"EDIT_USER_REQUEST_SUCCESS\";\r\nexport const EDIT_USER_REQUEST_FAILED: \"EDIT_USER_REQUEST_FAILED\" = \"EDIT_USER_REQUEST_FAILED\";\r\n\r\nexport const SET_IS_USER_LOADED: 'SET_IS_USER_LOADED' = 'SET_IS_USER_LOADED';\r\nexport const RESET_IS_USER_LOADED: 'RESET_IS_USER_LOADED' = 'RESET_IS_USER_LOADED';\r\n\r\nexport interface ISetUser {\r\n  readonly type: typeof SET_USER;\r\n  readonly user: {name: string, email: string};\r\n};\r\n\r\nexport interface IResetUser {\r\n  readonly type: typeof RESET_USER;\r\n};\r\n\r\nexport interface IGetUserRequest {\r\n  readonly type: typeof GET_USER_REQUEST;\r\n};\r\n\r\nexport interface IGetUserRequestSuccess {\r\n  readonly type: typeof GET_USER_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface IGetUserRequestFailed {\r\n  readonly type: typeof GET_USER_REQUEST_FAILED;\r\n};\r\n\r\nexport interface IEditUserRequest {\r\n  readonly type: typeof EDIT_USER_REQUEST;\r\n};\r\n\r\nexport interface IEditUserRequestSuccess {\r\n  readonly type: typeof EDIT_USER_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface IEditUserRequestFailed {\r\n  readonly type: typeof EDIT_USER_REQUEST_FAILED;\r\n};\r\n\r\nexport interface ISetIsUserLoaded {\r\n  readonly type: typeof SET_IS_USER_LOADED;\r\n};\r\n\r\nexport interface IResetIsUserLoaded {\r\n  readonly type: typeof RESET_IS_USER_LOADED;\r\n};\r\n\r\nexport type TUserActions = ISetUser | \r\n  IResetUser | \r\n  IGetUserRequest |\r\n  IGetUserRequestSuccess |\r\n  IGetUserRequestFailed |\r\n  IEditUserRequest |\r\n  IEditUserRequestSuccess |\r\n  IEditUserRequestFailed |\r\n  ISetIsUserLoaded |\r\n  IResetIsUserLoaded;\r\n\r\nexport const getUser: AppThunk = (token) => async (dispatch: AppDispatch) => {\r\n    dispatch({type: GET_USER_REQUEST});\r\n    try {\r\n      const headers = new Headers({\r\n        \"content-type\": \"application/json\",\r\n        \"authorization\": token});\r\n      const res = await fetch(`${API_URL}/auth/user`, {method: 'GET', mode: 'cors', headers});\r\n      const data = await res.json();\r\n      //if (res.ok) {\r\n        \r\n        if(data.success) {\r\n          dispatch({type: GET_USER_REQUEST_SUCCESS});\r\n          dispatch({ type: SET_USER, user: data.user});\r\n          dispatch({ type: SET_IS_AUTH });\r\n        } else {\r\n          \r\n          throw new Error(data.message);\r\n        }\r\n      //} else {\r\n      //  throw new Error('Get user failed')\r\n      //}\r\n    } catch(e) {\r\n      dispatch({type: GET_USER_REQUEST_FAILED});\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\nexport const editUser: AppThunk = (body, token) => async (dispatch: AppDispatch) => {\r\n    dispatch({type: GET_USER_REQUEST});\r\n    try {\r\n      const headers = new Headers({\r\n        \"content-type\": \"application/json\",\r\n        \"authorization\": token});\r\n      const res = await fetch(`${API_URL}/auth/user`, {method: 'PATCH', mode: 'cors', headers, body: JSON.stringify(body)});\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if(data.success) {\r\n          dispatch({type: GET_USER_REQUEST_SUCCESS});\r\n          dispatch({ type: SET_USER, user: data.user});\r\n        }\r\n      } else {\r\n        throw new Error('Edit user failed')\r\n      }\r\n    } catch(e) {\r\n      dispatch({type: GET_USER_REQUEST_FAILED});\r\n      console.log(e);\r\n    }\r\n  }\r\n","import { API_URL } from \"../../utils/url\";\r\n\r\nimport { SET_USER, RESET_USER } from \"./user-actions\";\r\nimport { AppDispatch, AppThunk } from \"../../types\";\r\n\r\nexport const SET_IS_AUTH: \"SET_IS_AUTH\" = \"SET_IS_AUTH\";\r\nexport const RESET_IS_AUTH: \"RESET_IS_AUTH\" = \"RESET_IS_AUTH\";\r\n\r\nexport const REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST' = 'REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_REQUEST_SUCCESS: 'REFRESH_TOKEN_REQUEST_SUCCESS' = 'REFRESH_TOKEN_REQUEST_SUCCESS';\r\nexport const REFRESH_TOKEN_REQUEST_FAILED: 'REFRESH_TOKEN_REQUEST_FAILED' = 'REFRESH_TOKEN_REQUEST_FAILED';\r\n\r\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\r\nexport const LOGIN_REQUEST_REQUEST_SUCCESS: 'LOGIN_REQUEST_REQUEST_SUCCESS' = 'LOGIN_REQUEST_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_REQUEST_FAILED: 'LOGIN_REQUEST_REQUEST_FAILED' = 'LOGIN_REQUEST_REQUEST_FAILED';\r\n\r\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_REQUEST_REQUEST_SUCCESS: 'LOGOUT_REQUEST_REQUEST_SUCCESS' = 'LOGOUT_REQUEST_REQUEST_SUCCESS';\r\nexport const LOGOUT_REQUEST_REQUEST_FAILED: 'LOGOUT_REQUEST_REQUEST_FAILED' = 'LOGOUT_REQUEST_REQUEST_FAILED';\r\n\r\nexport interface ISetIsAuth {\r\n  readonly type: typeof SET_IS_AUTH;\r\n};\r\n\r\nexport interface IResetIsAuth {\r\n  readonly type: typeof RESET_IS_AUTH;\r\n};\r\n\r\nexport interface IRefreshTokenRequest {\r\n  readonly type: typeof REFRESH_TOKEN_REQUEST;\r\n};\r\n\r\nexport interface IRefreshTokenRequestSuccess {\r\n  readonly type: typeof REFRESH_TOKEN_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface IRefreshTokenRequestFailed {\r\n  readonly type: typeof REFRESH_TOKEN_REQUEST_FAILED;\r\n};\r\n\r\nexport interface ILoginRequest {\r\n  readonly type: typeof LOGIN_REQUEST;\r\n};\r\n\r\nexport interface ILoginRequestSuccess {\r\n  readonly type: typeof LOGIN_REQUEST_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface ILoginRequestFailed {\r\n  readonly type: typeof LOGIN_REQUEST_REQUEST_FAILED;\r\n};\r\n\r\nexport interface ILogoutRequest {\r\n  readonly type: typeof LOGOUT_REQUEST;\r\n};\r\n\r\nexport interface ILogoutRequestSuccess {\r\n  readonly type: typeof LOGOUT_REQUEST_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface ILogoutRequestFailed {\r\n  readonly type: typeof LOGOUT_REQUEST_REQUEST_FAILED;\r\n};\r\n\r\nexport type TAuthActions = ISetIsAuth |\r\n  IResetIsAuth |\r\n  IRefreshTokenRequest |\r\n  IRefreshTokenRequestSuccess |\r\n  IRefreshTokenRequestFailed |\r\n  ILoginRequest |\r\n  ILoginRequestSuccess |\r\n  ILoginRequestFailed |\r\n  ILogoutRequest |\r\n  ILogoutRequestSuccess |\r\n  ILogoutRequestFailed;\r\n\r\n/*export const refreshToken: AppThunk = (body) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch({ type: REFRESH_TOKEN_REQUEST });\r\n      const headers = new Headers({\r\n        \"content-type\": 'application/json',\r\n\r\n      });\r\n\r\n      const res = await fetch(`${API_URL}/auth/token`, { method: 'POST', mode: 'cors', headers, body: JSON.stringify(body) });\r\n\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        dispatch({ type: REFRESH_TOKEN_REQUEST_SUCCESS });\r\n        //setCookie('token', data.refreshToken, {'path': '/'});\r\n        localStorage.setItem('token', data.refreshToken);\r\n        dispatch({ type: SET_IS_AUTH, accessToken: data.accessToken });\r\n      } else {\r\n        throw new Error(data.message);\r\n      }\r\n\r\n    } catch( e ) {\r\n      dispatch({ type: REFRESH_TOKEN_REQUEST_FAILED });\r\n      console.log( e );\r\n    }\r\n  }*/\r\nexport const checkAuth: AppThunk = () => async (dispatch: AppDispatch) => {\r\n  if(localStorage.getItem('refreshToken')) dispatch({type: SET_IS_AUTH});\r\n}\r\n\r\nexport const loginRequest: AppThunk = (body) => async (dispatch: AppDispatch) => {\r\n\r\n    dispatch({type: LOGIN_REQUEST});\r\n    try {\r\n      const headers = new Headers({\"content-type\": \"application/json\"});\r\n      const res = await fetch(`${API_URL}/auth/login`, {method: 'POST', mode: 'cors', headers, body: JSON.stringify(body)});\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if(data.success) {\r\n          localStorage.setItem('refreshToken', data.refreshToken);\r\n          localStorage.setItem('accessToken', data.accessToken);\r\n          dispatch({type: LOGIN_REQUEST_REQUEST_SUCCESS});\r\n          dispatch({ type: SET_IS_AUTH });\r\n          dispatch({ type: SET_USER, user: data.user});\r\n        }  \r\n      } else {\r\n        throw new Error('Login error');\r\n      }\r\n      \r\n    } catch(e) {\r\n      console.log(e);\r\n      dispatch({type: LOGIN_REQUEST_REQUEST_FAILED});\r\n    }\r\n  }\r\n\r\n\r\nexport const logoutRequest: AppThunk = (body) => async (dispatch: AppDispatch) => {\r\n\r\n    dispatch({type: LOGOUT_REQUEST});\r\n    try {\r\n      const headers = new Headers({\"content-type\": \"application/json\"});\r\n      const res = await fetch(`${API_URL}/auth/logout`, {method: 'POST', mode: 'cors', headers, body: JSON.stringify(body)});\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if(data.success) {\r\n          dispatch({ type: LOGOUT_REQUEST_REQUEST_SUCCESS });\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('refreshToken');\r\n          dispatch({ type: RESET_IS_AUTH });\r\n          dispatch({ type: RESET_USER });\r\n        }  \r\n      } else {\r\n        throw new Error('Logout error');\r\n      }\r\n      \r\n    } catch(e) {\r\n      console.log(e);\r\n      dispatch({type: LOGOUT_REQUEST_REQUEST_FAILED});\r\n    }\r\n  }\r\n","import React, { useState, FC } from 'react';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\nimport { Link, Navigate, useLocation } from 'react-router-dom';\r\nimport { TLocationWithState } from '../../react-burger-env';\r\n// Styles\r\nimport loginStyles from './login.module.css';\r\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { loginRequest } from '../../services/actions/auth-actions';\r\n//import { getCookie } from '../../utils/cookie';\r\n\r\nconst LoginPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [ formState, setFormState ] = useState({ email: '', password: ''});\r\n  const auth = useSelector(store => store.auth);\r\n  const location = useLocation() as TLocationWithState;\r\n\r\n  function onSubmitHandler(e: React.FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n\r\n    dispatch(loginRequest( formState ));\r\n  }\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value})\r\n  }\r\n  if(location.state === null) location.state = {from: '/'};\r\n\r\n  // location.state.from\r\n  return (\r\n    auth.fromLoginRedirect || localStorage.getItem('refreshToken') ?\r\n      location.state.backgroundProtected ?\r\n        <Navigate to={location.state.from} state={{background: location.state.backgroundProtected}} replace/>\r\n      :\r\n        <Navigate to={location.state.from} replace/>\r\n    :\r\n      <div className={loginStyles.loginFormWrapper}>\r\n        <span className=\"text text_type_main-default\">Вход</span>\r\n        <form className={`${loginStyles.form} mt-6 mb-20`} onSubmit={onSubmitHandler}>\r\n          <div className=\"mb-6\">\r\n            <Input \r\n              type='email' \r\n              name='email' \r\n              placeholder='E-mail' \r\n              value={formState.email}\r\n              onChange={handleChange}  \r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <PasswordInput \r\n              name='password' \r\n              value={formState.password}\r\n              onChange={handleChange}  \r\n             />\r\n          </div>\r\n          \r\n          <Button type='primary' size='medium' >\r\n            Войти\r\n          </Button>\r\n        </form>\r\n        <span className=\"text text_type_main-small text_color_inactive\">Вы - новый пользователь? <Link to='/register'>Зарегистрироваться</Link></span>\r\n        <span className=\"text text_type_main-small text_color_inactive\">Забыли пароль? <Link to='/forgot-password'>Восстановить пароль</Link></span>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","import { API_URL } from './url';\r\n\r\nexport const refreshToken = async ():Promise<boolean> => {\r\n  try {\r\n    const headers = new Headers({\r\n      \"content-type\": 'application/json',\r\n\r\n    });\r\n    const body = {'token': localStorage.getItem('refreshToken')};\r\n    const res = await fetch(`${API_URL}/auth/token`, { method: 'POST', mode: 'cors', headers, body: JSON.stringify(body) });\r\n\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        //setCookie('token', data.refreshToken, {'path': '/'});\r\n        localStorage.setItem('refreshToken', data.refreshToken);\r\n        localStorage.setItem('accessToken', data.accessToken);\r\n        return true;\r\n      } else {\r\n        throw new Error(data.message);\r\n      }\r\n\r\n    } catch( e ) {\r\n      console.log( e );\r\n      return false;\r\n    }\r\n}","import { API_URL } from \"../../utils/url\";\r\nimport { DATA_TYPE } from '../../react-burger-env';\r\nimport { AppDispatch, AppThunk } from \"../../types\";\r\nimport { refreshToken } from \"../../utils/token\";\r\n\r\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\r\nexport const SET_BURGER_NAME: 'SET_BURGER_NAME' = 'SET_BURGER_NAME';\r\nexport const SET_CURRENT_INGREDIENT: 'SET_CURRENT_INGREDIENT' = 'SET_CURRENT_INGREDIENT';\r\nexport const UPDATE_BURGER_INGREDIENTS: 'UPDATE_BURGER_INGREDIENTS' = 'UPDATE_BURGER_INGREDIENTS';\r\n\r\nexport const GET_INGREDIENTS_API_REQUEST: 'GET_INGREDIENTS_API_REQUEST' = 'GET_INGREDIENTS_API_REQUEST';\r\nexport const GET_INGREDIENTS_API_REQUEST_SUCCESS: 'GET_INGREDIENTS_API_REQUEST_SUCCESS' = 'GET_INGREDIENTS_API_REQUEST_SUCCESS';\r\nexport const GET_INGREDIENTS_API_REQUEST_FAILED: 'GET_INGREDIENTS_API_REQUEST_FAILED' = 'GET_INGREDIENTS_API_REQUEST_FAILED';\r\n\r\nexport const POST_ORDER_REQUEST: 'POST_ORDER_REQUEST' = 'POST_ORDER_REQUEST';\r\nexport const POST_ORDER_REQUEST_SUCCESS: 'POST_ORDER_REQUEST_SUCCESS' = 'POST_ORDER_REQUEST_SUCCESS';\r\nexport const POST_ORDER_REQUEST_FAILED: 'POST_ORDER_REQUEST_FAILED' = 'POST_ORDER_REQUEST_FAILED';\r\n\r\nexport const OPEN_INGREDIENTS_MODAL: 'OPEN_INGREDIENTS_MODAL' = 'OPEN_INGREDIENTS_MODAL';\r\nexport const OPEN_ORDER_MODAL: 'OPEN_ORDER_MODAL' = 'OPEN_ORDER_MODAL';\r\nexport const CLOSE_MODAL: 'CLOSE_MODAL' = 'CLOSE_MODAL';\r\n\r\nexport interface IAddIngredientAction {\r\n  readonly type: typeof ADD_INGREDIENT;\r\n  readonly ingredient: DATA_TYPE;\r\n};\r\n\r\nexport interface IDeleteIngredientAction {\r\n  readonly type: typeof DELETE_INGREDIENT;\r\n  readonly ingredient: DATA_TYPE;\r\n  readonly id: string;\r\n  readonly index: number;\r\n};\r\n\r\nexport interface ISetBurgerName {\r\n  readonly type: typeof SET_BURGER_NAME;\r\n  readonly name: string;\r\n};\r\n\r\nexport interface ISetCurrentIngredient {\r\n  readonly type: typeof SET_CURRENT_INGREDIENT;\r\n  readonly ingredient: DATA_TYPE;\r\n};\r\n\r\nexport interface IUpdateBurgerIngredients {\r\n  readonly type: typeof UPDATE_BURGER_INGREDIENTS;\r\n  readonly burger: Array<{index: number, item: DATA_TYPE}>;\r\n}\r\n\r\nexport interface IGetIngredientsAPIRequest {\r\n  readonly type: typeof GET_INGREDIENTS_API_REQUEST;\r\n};\r\n\r\nexport interface IGetIngredientsAPIRequestSuccess {\r\n  readonly type: typeof GET_INGREDIENTS_API_REQUEST_SUCCESS;\r\n  readonly ingredients: Array<DATA_TYPE>;\r\n};\r\n\r\nexport interface IGetIngredientsAPIRequestFailed {\r\n  readonly type: typeof GET_INGREDIENTS_API_REQUEST_FAILED;\r\n};\r\n\r\nexport interface IPostOrderRequest {\r\n  readonly type: typeof POST_ORDER_REQUEST;\r\n};\r\n\r\nexport interface IPostOrderRequestSuccess {\r\n  readonly type: typeof POST_ORDER_REQUEST_SUCCESS;\r\n  readonly orderNumber: number;\r\n};\r\n\r\nexport interface IPostOrderRequestFailed {\r\n  readonly type: typeof POST_ORDER_REQUEST_FAILED;\r\n};\r\n\r\nexport interface IOpenIngredientsModal {\r\n  readonly type: typeof OPEN_INGREDIENTS_MODAL;\r\n};\r\n\r\nexport interface IOpenOrderModal {\r\n  readonly type: typeof OPEN_ORDER_MODAL;\r\n};\r\n\r\nexport interface ICloseModal {\r\n  readonly type: typeof CLOSE_MODAL;\r\n};\r\n\r\nexport type TBurgerActions = \r\n  IAddIngredientAction | \r\n  IDeleteIngredientAction | \r\n  ISetBurgerName | \r\n  ISetCurrentIngredient | \r\n  IUpdateBurgerIngredients | \r\n  IGetIngredientsAPIRequest | \r\n  IGetIngredientsAPIRequestSuccess | \r\n  IGetIngredientsAPIRequestFailed |\r\n  IPostOrderRequest |\r\n  IPostOrderRequestSuccess |\r\n  IPostOrderRequestFailed |\r\n  IOpenIngredientsModal |\r\n  IOpenOrderModal |\r\n  ICloseModal ;\r\n\r\nexport const getIngredients: AppThunk = () => async (dispatch: AppDispatch) => {\r\n  dispatch({type: GET_INGREDIENTS_API_REQUEST});\r\n  const headers = new Headers({\"content-type\": \"application/json\"})\r\n  try {\r\n    const res = await fetch(`${API_URL}/ingredients`, { method: \"GET\", mode: \"cors\", headers});\r\n    if (res.ok) {\r\n      const resData = await res.json();\r\n      dispatch({type: GET_INGREDIENTS_API_REQUEST_SUCCESS, ingredients: resData.data});\r\n    } else {\r\n      throw new Error ('Get ingredients fetch error');\r\n    }\r\n  } catch (error) {\r\n    dispatch({type: GET_INGREDIENTS_API_REQUEST_FAILED});\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nexport const postOrder: AppThunk = (burger, token) => async (dispatch: AppDispatch) => {\r\n  dispatch({type: POST_ORDER_REQUEST});\r\n  try {\r\n    const headers = new Headers({\r\n      \"content-type\": \"application/json\",\r\n      \"authorization\": token\r\n    });\r\n    let fetchData: Array<DATA_TYPE> = [];\r\n    fetchData.push(burger.bun._id);\r\n    if(burger.ingredients.length > 0) {\r\n      fetchData = fetchData.concat(burger.ingredients.map((el: {index: number, item: DATA_TYPE} ) => el.item._id));\r\n    }\r\n    const body: string = JSON.stringify({ingredients: fetchData});\r\n    const res = await fetch(`${API_URL}/orders`, {method: 'POST', mode: 'cors', headers, body});\r\n\r\n    const data = await res.json();\r\n    if(data.success) {\r\n      //setBurger({...burger, name: data.name});\r\n      dispatch({type: SET_BURGER_NAME, name: data.name});\r\n      dispatch({type: POST_ORDER_REQUEST_SUCCESS, orderNumber: data.order.number});\r\n      //setOrder({...order, number: data.order.number});\r\n      //props.openModal();\r\n      \r\n    } else {\r\n      if (data.message === 'jwt expired') {\r\n        if(await refreshToken()) {\r\n          const res = await fetch(`${API_URL}/orders`, {method: 'POST', mode: 'cors', headers, body});\r\n\r\n          const data = await res.json();\r\n          if(data.success) {\r\n            //setBurger({...burger, name: data.name});\r\n            dispatch({type: SET_BURGER_NAME, name: data.name});\r\n            dispatch({type: POST_ORDER_REQUEST_SUCCESS, orderNumber: data.order.number});\r\n          }\r\n        }\r\n      \r\n      } else {\r\n        throw new Error('Post order fetch error');\r\n      }\r\n    }\r\n    \r\n  } catch(e) {\r\n    console.log(e);\r\n    dispatch({type: POST_ORDER_REQUEST_FAILED});\r\n  }\r\n}\r\n\r\n\r\n","import React, { FC } from \"react\";\r\nimport { useSelector, useDispatch } from '../../hooks/hooks';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport itemStyles from './ingredients-item.module.css';\r\n\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n//import { DATA_TYPE } from \"../../utils/type\";\r\n\r\nimport { SET_CURRENT_INGREDIENT, OPEN_INGREDIENTS_MODAL } from '../../services/actions/burger-actions';\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\n\r\ntype TIngredientItemProps = {\r\n  item: DATA_TYPE;\r\n  count: number;\r\n  key: string;\r\n}\r\n\r\nconst IngredientsItem: FC<TIngredientItemProps> = ({item}) => {\r\n  const burgerIngredientsCounts = useSelector(store => store.state.burger.ingredientsCounts);\r\n  const current =  burgerIngredientsCounts.find((el: {count: number, type: string, id: string}) => el.id === item._id);\r\n  const count = current ? current.count : 0;\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: {id: item._id},\r\n    /*collect: monitor => ({\r\n      isDrag: monitor.isDragging\r\n    })*/\r\n  });\r\n\r\n  function clickHandler(e: React.MouseEvent<HTMLDivElement> ) {\r\n    dispatch({type: SET_CURRENT_INGREDIENT, ingredient: item});\r\n    dispatch({type: OPEN_INGREDIENTS_MODAL});\r\n    navigate(`/ingredients/${item._id}`, {state: {background: location}});\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={itemStyles.itemWrapper} ref={dragRef} onClick={clickHandler}>\r\n    {(count > 0) && (<div className={itemStyles.count+' text text_type_digits-default'}>{count}</div>)}\r\n      <img src={item.image} alt='изображение' />\r\n      <div className={itemStyles.price+' text text_type_digits-default mt-1 mb-1'}>\r\n        <span className='mr-2'>{item.price}</span><CurrencyIcon type='primary' />\r\n      </div>\r\n      <span className='text text_type_main-small'>{item.name}</span>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientsItem;","export const UPDATE_CURRENT_TAB: 'UPDATE_CURRENT_TAB' = 'UPDATE_CURRENT_TAB';\r\n\r\nexport interface IUpdateCurrentTab {\r\n    readonly type: typeof UPDATE_CURRENT_TAB;\r\n    readonly ratio: number;\r\n    readonly id: string;\r\n};\r\n\r\nexport type TTabActions = IUpdateCurrentTab;","import React, { FC, RefObject } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../hooks/hooks\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\n// Components\r\nimport IngredientsItem from \"../ingredients-item/ingredients-item\";\r\n\r\n// Actions\r\nimport { UPDATE_CURRENT_TAB } from \"../../services/actions/constructor-tab-actions\";\r\n\r\n// Data\r\n\r\n// Styles\r\nimport typeStyles from './ingredients-type.module.css';\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\n\r\ntype TIngredientsTypeProps = {\r\n  reference: RefObject<HTMLLIElement>;\r\n  id: string;\r\n  type: string;\r\n}\r\n\r\nconst IngredientsType: FC<TIngredientsTypeProps> = (props) => {\r\n  //const { data } = React.useContext(AppContext);\r\n  const dispatch = useDispatch();\r\n  const data = useSelector(store => store.state.ingredients);\r\n  const arrayOfElements: Array<DATA_TYPE> = [];\r\n  if(data) {\r\n    data.forEach((el: DATA_TYPE) => {\r\n      if(el.type === props.id)\r\n        arrayOfElements.push(el);\r\n    });\r\n  }\r\n\r\n  const { ref, inView, entry } = useInView({\r\n    threshold: [0, 0.25, 0.5, 1]\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_TAB,\r\n      id: props.id,\r\n      ratio: entry ? entry.intersectionRatio : 0\r\n    });\r\n  }, [inView, entry, dispatch, props.id]); // При изменении данных/скролле, обновляем ratio\r\n  \r\n  return (\r\n    <div className={typeStyles.typeWrapper} ref={ref}>\r\n      <div className='text text_type_main-medium mt-10 mb-6'>{props.type}</div>\r\n      <div className={typeStyles.itemsWrapper}>\r\n        {arrayOfElements.map(item => {\r\n            return <IngredientsItem item={item} count={0} key={item._id} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientsType;","import React, { FC } from \"react\";\r\nimport { useSelector } from \"../../hooks/hooks\";\r\n\r\n// Styles\r\nimport ingredientsStyles from './burger-ingredients.module.css';\r\n\r\n// Components\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport IngredientsType from \"../ingredients-type/ingredients-type\";\r\n\r\n// Data\r\n\r\nconst BurgerIngredients: FC = () => {\r\n  //const [current, setCurrent] = React.useState('Булки');\r\n  const current = useSelector((store) => store.tabsState.tabs.reduce((current, tab) => {\r\n    return current.ratio < tab.ratio ? tab : current\r\n  }, store.tabsState.tabs[0]).title);\r\n  const bunRef = React.useRef<HTMLLIElement>(null);\r\n  const sauceRef = React.useRef<HTMLLIElement>(null);\r\n  const mainRef = React.useRef<HTMLLIElement>(null);\r\n\r\n  const setTab = (tab: string) => {\r\n    //setCurrent(tab);\r\n    switch (tab) {\r\n      case 'Булки':\r\n        if (bunRef.current) bunRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      break;\r\n      case 'Соусы':\r\n        if (sauceRef.current) sauceRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      break;\r\n      case 'Начинки':\r\n        if (mainRef.current) mainRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={ingredientsStyles.burgerIngredientsWrapper+' pt-10'}>\r\n      <span className='text text_type_main-large'>Соберите бургер</span>\r\n      <div className={ingredientsStyles.table+' mt-5'}>\r\n        <Tab value='Булки' active={current === 'Булки'} onClick={setTab}>\r\n          Булки\r\n        </Tab>\r\n        <Tab value='Соусы' active={current === 'Соусы'} onClick={setTab}>\r\n          Соусы\r\n        </Tab>\r\n        <Tab  value='Начинки' active={current === 'Начинки'} onClick={setTab}>\r\n          Начинки\r\n        </Tab>\r\n        \r\n      </div>\r\n      <ul className={ingredientsStyles.scrolledWindow} >\r\n        <li ref={bunRef}>\r\n          <IngredientsType reference={bunRef} id='bun' type='Булки' />\r\n        </li>\r\n        <li ref={sauceRef}>\r\n          <IngredientsType reference={sauceRef} id='sauce' type='Соусы' />\r\n        </li>\r\n        <li ref={mainRef}>          \r\n          <IngredientsType reference={mainRef} id='main' type='Начинки' />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerIngredients;","import { FC, useCallback, useRef } from \"react\";\r\nimport { useSelector } from \"../../hooks/hooks\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ConstructorElement, DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch } from '../../hooks/hooks';\r\nimport update from 'immutability-helper';\r\n\r\n\r\nimport itemStyles from \"./constructor-ingredient-item.module.css\";\r\nimport { DELETE_INGREDIENT, UPDATE_BURGER_INGREDIENTS } from \"../../services/actions/burger-actions\";\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\n\r\ntype TConstructorIngredientItemProps = {\r\n  el: DATA_TYPE;\r\n  index: number;\r\n};\r\n\r\nconst ConstructorIngredientItem: FC<TConstructorIngredientItemProps> = ({ el, index }) => {\r\n  const burgerIngredients = useSelector(store => store.state.burger.ingredients);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const moveItem = useCallback((dragIndex, hoverIndex) => {\r\n    //const burger = [...burgerIngredients];\r\n    const dragItem = burgerIngredients[dragIndex];\r\n\r\n    dispatch({\r\n      type: UPDATE_BURGER_INGREDIENTS,\r\n      burger: update(burgerIngredients, {\r\n        $splice: [\r\n          [dragIndex, 1],\r\n          [hoverIndex, 0, dragItem]\r\n        ],\r\n      })\r\n    });\r\n  }, [burgerIngredients, dispatch]);\r\n\r\n  const [,dropTarget] = useDrop({\r\n    accept: 'inBurgerIngredient',\r\n    hover: (item: {id: string, index: number}, monitor) => {\r\n    \r\n      const dragIndex: number = item.index;\r\n      const hoverIndex: number = index;\r\n\r\n      if (dragIndex === hoverIndex) return;\r\n\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY = (hoverBoundingRect!.bottom - hoverBoundingRect!.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset!.y - hoverBoundingRect!.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n          return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n          return;\r\n      }\r\n\r\n      moveItem(dragIndex, hoverIndex);\r\n      item.index = hoverIndex; \r\n    }\r\n  });\r\n\r\n  const [{isDragging}, dragRef] = useDrag({\r\n    type: 'inBurgerIngredient',\r\n    item: {id: el._id, index},\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n    \r\n  })\r\n\r\n  function deleteElementHandler() {\r\n    dispatch({type: DELETE_INGREDIENT, id: el._id, index: index});\r\n  }\r\n\r\n  dragRef(dropTarget(ref));\r\n  const opacity = isDragging ? 0 : 1;\r\n  return (\r\n    <div className={`${itemStyles.constructorElementWrapper} pr-2`} ref={ref} style={{opacity}} >\r\n      <div className='pr-2' style={{cursor: \"move\"}} ><DragIcon type='primary' /></div>\r\n      <ConstructorElement\r\n        text={el.name }\r\n        price={el.price}\r\n        thumbnail={el.image}\r\n        handleClose={deleteElementHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConstructorIngredientItem;","import React, { FC, SyntheticEvent } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../hooks/hooks\";\r\nimport { useDrop } from \"react-dnd\";\r\n\r\n// Components\r\nimport {ConstructorElement, \r\n        Button, \r\n        CurrencyIcon  } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ConstructorIngredientItem from \"../conspructor-ingredient-item/constructor-ingredient-item\";\r\n\r\n// Styles\r\nimport constructorStyles from './burger-constructor.module.css';\r\n\r\n// Data\r\n//import { data } from '../../utils/data';\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\n\r\n// Actions\r\nimport { ADD_INGREDIENT } from '../../services/actions/burger-actions';\r\n\r\n\r\nconst BurgerConstructor: FC<{openOrderModal: (() => void) | ((e: SyntheticEvent) => void)}> = ({ openOrderModal }) => {\r\n  const data = useSelector(store => store.state.ingredients);\r\n  const burger = useSelector(store => store.state.burger);\r\n  \r\n  let bunName, bunPrice, bunImage;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [{isHover}, dropTarget] = useDrop({\r\n    accept: [\"ingredient\", 'inBurgerIngredient'],\r\n    drop(itemId, monitor) {\r\n      const type = monitor.getItemType();\r\n      onDropHandler(itemId, type);\r\n    },\r\n    collect: monitor => ({\r\n      isHover: monitor.isOver(),\r\n    })\r\n  });\r\n\r\n  function onDropHandler(item: any, type: any) {\r\n    if (type === 'ingredient') {\r\n      dispatch({type: ADD_INGREDIENT, ingredient: data.find((el: DATA_TYPE) => el._id === item.id)});\r\n    } else {\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  if(!!burger.bun) {\r\n    bunName = burger.bun.name;\r\n    bunPrice = burger.bun.price;\r\n    bunImage = burger.bun.image;\r\n  } else {\r\n    bunName = '';\r\n    bunPrice = 0;\r\n    bunImage = '';\r\n  }\r\n\r\n  const wrapperClassName = `${constructorStyles.dropTarget} ${isHover ? 'readyToDrop' : ''}`\r\n  return (\r\n    <div \r\n      className={`${constructorStyles.burgerConstructorWrapper} ml-10 mt-25`} \r\n      ref={dropTarget}\r\n    >\r\n      {burger.ingredients.length === 0 && !bunName &&\r\n        <div className={wrapperClassName} >\r\n          Добавьте ингредиенты\r\n        </div>\r\n\r\n      }\r\n\r\n        {!!bunName && \r\n          <div className={constructorStyles.bunConstructor+' mb-2 ml-8 mr-4'}>\r\n            <ConstructorElement\r\n              type=\"top\"\r\n              isLocked={true}\r\n              text={bunName+' (верх)'}\r\n              price={bunPrice}\r\n              thumbnail={bunImage}\r\n            />\r\n          </div>\r\n        }\r\n        {!!burger.ingredients.length &&\r\n          <div className={constructorStyles.innerWrapper}>\r\n            {burger.ingredients.map((el: {item: DATA_TYPE, index: number}, index: number) => <ConstructorIngredientItem el={el.item} index={index} key={el.index}/>)}\r\n          </div>\r\n        }\r\n        \r\n        {!!bunName && \r\n          <div className={constructorStyles.bunConstructor+' mt-2 ml-8 mr-4'}>\r\n            <ConstructorElement\r\n              type=\"bottom\"\r\n              isLocked={true}\r\n              text={bunName+' (низ)'}\r\n              price={bunPrice}\r\n              thumbnail={bunImage}\r\n            />\r\n          </div>\r\n        }\r\n        \r\n      {/*</div>*/}\r\n      {(burger.ingredients.length > 0 || bunName) &&\r\n      <div className={`${constructorStyles.totalWrapper} mt-10 mr-4`}>\r\n          <div className={constructorStyles.total + ' text text_type_digits-medium mr-10'}>\r\n            <span className='mr-2'>\r\n              {burger.totalPrice}\r\n              </span>\r\n            <CurrencyIcon type='primary' />\r\n          </div>\r\n          {bunName && <div className={constructorStyles.buttonWrapper}>\r\n            <Button type=\"primary\" size=\"medium\" onClick={openOrderModal}>\r\n              Оформить заказ\r\n            </Button>\r\n          </div>}\r\n        </div>}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default BurgerConstructor;","export default __webpack_public_path__ + \"static/media/done.3ba9e5cd.svg\";","import React from \"react\";\r\nimport { useSelector } from \"../../hooks/hooks\";\r\n\r\n//Styles\r\nimport orderDetailsStyles from './order-details.module.css';\r\n\r\n// Components\r\n\r\n// Images\r\nimport doneImage from '../../images/done.svg';\r\n\r\nconst OrderDetails: React.FC = () => {\r\n  const order = useSelector(store => store.state.order);\r\n  const { orderPostRequest } = useSelector(store => store.state)\r\n  return (\r\n    <>\r\n      \r\n      <div className={orderDetailsStyles.number+' text text_type_digits-large mt-30 mb-8'}>\r\n        {orderPostRequest ? (<span className={`${orderDetailsStyles.preloaderText} text text_type_main-large`}>Подождите...</span>) : order.number}\r\n      </div>\r\n      <div className={`${orderDetailsStyles.title} text text_type_main-medium mb-15`}>\r\n        идентификатор заказа\r\n      </div>\r\n      <div className={orderDetailsStyles.done+' mb-15'}>\r\n        <img src={doneImage} alt=\"done\" />\r\n      </div>\r\n      <span className={`${orderDetailsStyles.textRow1} text text_type_main-default mb-2`}>\r\n        Ваш заказ начали готовить \r\n      </span>\r\n      <span className={`${orderDetailsStyles.textRow2} text text_type_main-default mb-30`}>\r\n        Дождитесь готовности на орбитальной станции \r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n\r\n","import React, { FC } from \"react\";\r\n\r\n// Styles\r\nimport modalOverlayStyles from './modal-overlay.module.css';\r\n\r\ntype ModalOverlayProps = {\r\n  closeModal: () => void;\r\n  children: JSX.Element;\r\n};\r\n\r\nconst ModalOverlay: FC<ModalOverlayProps> = ({ closeModal, children} ) => {\r\n  const modalOverlayRef = React.createRef<HTMLDivElement>();\r\n\r\n  function onClickHandler(e: React.MouseEvent<HTMLDivElement>) {\r\n    if(e.target === modalOverlayRef.current) {\r\n      closeModal();\r\n    }\r\n  }\r\n  return (\r\n    <div \r\n      className={modalOverlayStyles.back} \r\n      id=\"modal-overlay\"\r\n      ref={modalOverlayRef}\r\n      onClick={onClickHandler} \r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import React, { FC } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//Styles\r\nimport modalStyles from './modal.module.css';\r\n\r\n// Components\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n//import ModalHeader from \"../modal-header/modal-header\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ntype TModalProps = {\r\n  closeModal: () => void;\r\n  title: string;  \r\n  children: JSX.Element;\r\n};\r\n\r\nconst Modal: FC<TModalProps> = ({ closeModal, title, children}) => {\r\n  const portalDiv = document.getElementById('modal-root')!;\r\n\r\n  React.useEffect(() => {\r\n    const modal = document.getElementById('modal-wrapper');\r\n    modal!.focus();\r\n  }, []);\r\n\r\n  function escapeButtonHandler(e: React.KeyboardEvent<HTMLDivElement>) {\r\n    if(e.key === 'Escape') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  function closeButtonClickHandler() {\r\n    closeModal();\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <ModalOverlay closeModal={closeModal}>\r\n      <div className={modalStyles.modalWrapper} id='modal-wrapper' onKeyDown={escapeButtonHandler} tabIndex={-1}>\r\n        <div className={`${modalStyles.closeButtonWrapper} mt-15 mr-10`}>\r\n          <CloseIcon type='primary' onClick={closeButtonClickHandler} />\r\n        </div>\r\n        {\r\n          !!title && \r\n            <div className={`${modalStyles.modalHeader} text text_type_main-large mt-10 mr-10 ml-10`}>\r\n              {title}\r\n            </div>\r\n        }\r\n        {children}\r\n      </div>\r\n    </ModalOverlay>,\r\n    portalDiv\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, { FC } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../hooks/hooks\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// Components\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport OrderDetails from \"../../components/order-details/order-details\";\r\nimport Modal from \"../../components/modal/modal\";\r\n\r\n// Actions\r\nimport { CLOSE_MODAL, OPEN_ORDER_MODAL, postOrder } from \"../../services/actions/burger-actions\";\r\n\r\n// Styles\r\nimport cnstructorStyles from './constructor.module.css'\r\n\r\nconst ConstructorPage: FC = () => {\r\n  const { state } = useSelector(store => store);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => {\r\n    dispatch({type: CLOSE_MODAL});\r\n  }\r\n\r\n  const openOrderModal = () => {\r\n    \r\n    if ( localStorage.getItem('accessToken') ) {\r\n      dispatch(postOrder(state.burger, localStorage.getItem('accessToken')));\r\n      dispatch({type: OPEN_ORDER_MODAL});  \r\n    } else {\r\n      navigate('/login', { state: {from: location.pathname}});\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <div className={cnstructorStyles.burgerWrapper}>\r\n          <BurgerIngredients />\r\n          <BurgerConstructor openOrderModal={openOrderModal} /> \r\n        </div>\r\n      </DndProvider>\r\n      {state.modal.isModalOpen && state.modal.isOrderModal && \r\n        <Modal\r\n          title=''\r\n          closeModal={closeModal}\r\n        >\r\n          <OrderDetails />\r\n        </Modal>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConstructorPage;","\r\nimport { API_URL } from \"../../utils/url\";\r\nimport { SET_IS_AUTH } from \"./auth-actions\";\r\nimport { SET_USER } from \"./user-actions\";\r\nimport { AppDispatch, AppThunk } from \"../../types\";\r\n\r\nexport const REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST' = 'REGISTER_USER_REQUEST';\r\nexport const REGISTER_USER_REQUEST_SUCCESS: 'REGISTER_USER_REQUEST_SUCCESS' = 'REGISTER_USER_REQUEST_SUCCESS';\r\nexport const REGISTER_USER_REQUEST_FAILED: 'REGISTER_USER_REQUEST_FAILED' = 'REGISTER_USER_REQUEST_FAILED';\r\n\r\nexport interface IRegisterUserRequest {\r\n  readonly type: typeof REGISTER_USER_REQUEST;\r\n};\r\n\r\nexport interface IRegisterUserRequestSuccess {\r\n  readonly type: typeof REGISTER_USER_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface IRegisterUserRequestFailed {\r\n  readonly type: typeof REGISTER_USER_REQUEST_FAILED;\r\n};\r\n\r\nexport type TRegisterActions = IRegisterUserRequest | IRegisterUserRequestSuccess | IRegisterUserRequestFailed;\r\n\r\nexport const registerUserRequest: AppThunk = (body) => async (dispatch: AppDispatch) => {\r\n  dispatch({type: REGISTER_USER_REQUEST });\r\n  try {\r\n    const headers = new Headers({\"content-type\": \"application/json\"});\r\n    const res = await fetch(`${API_URL}/auth/register`, {method: 'POST', mode: 'cors', headers, body: JSON.stringify(body)});\r\n    if (res.ok) {\r\n      const data = await res.json();\r\n      if(data.success) {\r\n        dispatch({type: REGISTER_USER_REQUEST_SUCCESS});\r\n        //setCookie('token', data.refreshToken);\r\n        localStorage.setItem('refreshToken', data.refreshToken);\r\n        localStorage.setItem('accessToken', data.accessToken);\r\n        dispatch({ type: SET_IS_AUTH });\r\n        dispatch({ type: SET_USER, user: data.user});\r\n      }  \r\n    } else {\r\n      throw new Error('Registration error');\r\n    }\r\n    \r\n  } catch(e) {\r\n    console.log(e);\r\n    dispatch({type: REGISTER_USER_REQUEST_FAILED});\r\n  }\r\n}\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// Styles\r\nimport registerStyles from './register.module.css';\r\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { registerUserRequest } from '../../services/actions/register-actions';\r\n\r\nconst RegisterPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { isAuth } = useSelector(store => store.auth);\r\n  const [ formState, setFormState ] = useState({ email: '', name: '', password: ''});\r\n  const navigate = useNavigate();\r\n\r\n  function onSubmitHandler(e: React.FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    dispatch(registerUserRequest(formState));\r\n  }\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if ( localStorage.getItem('accessToken') ) {\r\n      navigate('/');\r\n    }\r\n    \r\n  },[navigate, isAuth]);\r\n\r\n  if ( localStorage.getItem('accessToken')/*getCookie('token')*/ ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={registerStyles.loginFormWrapper}>\r\n      <span className=\"text text_type_main-default\">Зарегистрироваться</span>\r\n      <form className={`${registerStyles.form} mt-6 mb-20`} onSubmit={onSubmitHandler} >\r\n        <div className=\"mb-6\">\r\n          <Input \r\n            type='text' \r\n            name='name' \r\n            placeholder='Имя' \r\n            value={formState.name}  \r\n            onChange={handleChange}  \r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <Input \r\n            type='email' \r\n            name='email' \r\n            placeholder='E-mail' \r\n            value={formState.email} \r\n            onChange={handleChange} \r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <PasswordInput \r\n            name='password' \r\n            value={formState.password} \r\n            onChange={handleChange} \r\n          />\r\n        </div>\r\n        \r\n        <Button type='primary' size='medium' >\r\n          Зарегистрироваться\r\n        </Button>\r\n      </form>\r\n      <span className=\"text text_type_main-small text_color_inactive\">Уже зарегистрированы? <Link to='/login'>Войти</Link></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;","import { AppDispatch, AppThunk } from \"../../types\";\r\nimport { API_URL } from \"../../utils/url\";\r\n//import { useHistory } from 'react-router-dom';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_REQUEST_SUCCESS: 'FORGOT_PASSWORD_REQUEST_SUCCESS' = 'FORGOT_PASSWORD_REQUEST_SUCCESS';\r\nexport const FORGOT_PASSWORD_REQUEST_FAILED: 'FORGOT_PASSWORD_REQUEST_FAILED' = 'FORGOT_PASSWORD_REQUEST_FAILED';\r\nexport const FORGOT_PASSWORD_REDIRECT_CLEAR: 'FORGOT_PASSWORD_REDIRECT_CLEAR' = 'FORGOT_PASSWORD_REDIRECT_CLEAR';\r\n\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_REQUEST_SUCCESS: 'RESET_PASSWORD_REQUEST_SUCCESS' = 'RESET_PASSWORD_REQUEST_SUCCESS';\r\nexport const RESET_PASSWORD_REQUEST_FAILED: 'RESET_PASSWORD_REQUEST_FAILED' = 'RESET_PASSWORD_REQUEST_FAILED';\r\n\r\nexport interface IForgotPasswordRequest {\r\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\r\n};\r\n\r\nexport interface IForgotPasswordRequestSuccess {\r\n  readonly type: typeof FORGOT_PASSWORD_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface IForgotPasswordRequestFailed {\r\n  readonly type: typeof FORGOT_PASSWORD_REQUEST_FAILED;\r\n};\r\n\r\nexport interface IForgotPasswordRedirectClear {\r\n  readonly type: typeof FORGOT_PASSWORD_REDIRECT_CLEAR;\r\n};\r\n\r\nexport interface IResetPasswordRequest {\r\n  readonly type: typeof RESET_PASSWORD_REQUEST;\r\n};\r\n\r\nexport interface IResetPasswordRequestSuccess {\r\n  readonly type: typeof RESET_PASSWORD_REQUEST_SUCCESS;\r\n};\r\n\r\nexport interface IResetPasswordRequestFailed {\r\n  readonly type: typeof RESET_PASSWORD_REQUEST_FAILED;\r\n};\r\n\r\nexport type TPasswordActions = IForgotPasswordRequest |\r\n  IForgotPasswordRequestSuccess |\r\n  IForgotPasswordRequestFailed |\r\n  IForgotPasswordRedirectClear |\r\n  IResetPasswordRequest |\r\n  IResetPasswordRequestFailed |\r\n  IResetPasswordRequestSuccess;\r\n\r\nexport const forgotPasswordRequest: AppThunk = (email: string) => async (dispatch: AppDispatch) => {\r\n    //const history = useHistory();\r\n\r\n    dispatch({type: FORGOT_PASSWORD_REQUEST});\r\n    try {\r\n      const headers = new Headers({\"content-type\": \"application/json\"});\r\n      const res = await fetch(`${API_URL}/password-reset`, {method: 'POST', mode: 'cors', headers, body: JSON.stringify({email})});\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if(data.success) {\r\n          dispatch({type: FORGOT_PASSWORD_REQUEST_SUCCESS});\r\n        }  \r\n      } else {\r\n        throw new Error('Forgot password fetch error');\r\n      }\r\n      \r\n    } catch(e) {\r\n      console.log(e);\r\n      dispatch({type: FORGOT_PASSWORD_REQUEST_FAILED});\r\n    }\r\n  }\r\n\r\n\r\nexport const resetPasswordRequest:AppThunk = (body: string) => async (dispatch: AppDispatch) => {\r\n    //const history = useHistory();\r\n\r\n    dispatch({type: RESET_PASSWORD_REQUEST});\r\n    try {\r\n      const headers = new Headers({\"content-type\": \"application/json\"});\r\n      const res = await fetch(`${API_URL}/password-reset/reset`, {method: 'POST', mode: 'cors', headers, body: JSON.stringify(body)});\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        if(data.success) {\r\n          dispatch({type: RESET_PASSWORD_REQUEST_SUCCESS});\r\n        }  \r\n      } else {\r\n        throw new Error('Forgot password fetch error');\r\n      }\r\n      \r\n    } catch(e) {\r\n      console.log(e);\r\n      dispatch({type: RESET_PASSWORD_REQUEST_FAILED});\r\n    }\r\n  }\r\n","import { useState, FC } from 'react';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\nimport { Link, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\n// Styles\r\nimport forgotPassStyles from './forgot-password.module.css';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { forgotPasswordRequest } from '../../services/actions/password-actions';\r\n\r\nimport { TLocationWithState } from '../../react-burger-env';\r\n\r\nconst ForgotPasswordPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [ formState, setFormState ] = useState({ email: ''});\r\n  const { password }= useSelector(store => store);\r\n  const navigate = useNavigate();\r\n  const location = useLocation() as TLocationWithState;\r\n  \r\n  function onSubmitHandler(e: React.FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    dispatch(forgotPasswordRequest(formState['email']));\r\n  }\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  if(localStorage.getItem('token')/*getCookie('token')*/) {\r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    password.fromForgotPasswordRedirect ?\r\n      <Navigate to={'/reset-password'} state={ {from: location.pathname} } />\r\n      :\r\n      <div className={forgotPassStyles.loginFormWrapper}>\r\n        <span className=\"text text_type_main-default\">Восстановление пароля</span>\r\n        <form className={`${forgotPassStyles.form} mt-6 mb-20`} onSubmit={onSubmitHandler} >\r\n          <div className=\"mb-6\">\r\n            <Input \r\n              type='email' \r\n              name='email' \r\n              placeholder='Укажите e-mail' \r\n              value={formState.email} \r\n              onChange={handleChange} \r\n            />\r\n          </div>        \r\n          <Button type='primary' size='medium' >\r\n            Восстановить\r\n          </Button>\r\n        </form>\r\n        <span className=\"text text_type_main-small text_color_inactive\">Вспомнили пароль? <Link to='/login'>Войти</Link></span>\r\n      </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default ForgotPasswordPage;","import React, { FC, useEffect, useState } from 'react';\r\nimport { Link, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport { FORGOT_PASSWORD_REDIRECT_CLEAR, resetPasswordRequest } from '../../services/actions/password-actions';\r\n\r\n// Styles\r\nimport resetPassStyles from './reset-password.module.css';\r\nimport { PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n\r\nconst ResetPasswordPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [ formState, setFormState ] = useState({ token: '', password: ''});\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isRedirect = useSelector(store => store.password.fromResetPasswordRedirect);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: FORGOT_PASSWORD_REDIRECT_CLEAR });\r\n  });\r\n\r\n  function onSubmitHandler(e: React.FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    dispatch( resetPasswordRequest( formState ));\r\n  }\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    setFormState({ ...formState, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  if(localStorage.getItem('token')/*getCookie('token')*/) {\r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  if(typeof location.state === 'undefined') {\r\n    navigate('/forgot-password');\r\n    return null;\r\n  }\r\n\r\n\r\n  return (\r\n    isRedirect ?\r\n      <Navigate to='/login' replace />\r\n    :\r\n      <div className={resetPassStyles.loginFormWrapper}>\r\n        <span className=\"text text_type_main-default\">Восстановление пароля</span>\r\n        <form className={`${resetPassStyles.form} mt-6 mb-20`} onSubmit={onSubmitHandler} >\r\n          <div className=\"mb-6\">\r\n            <PasswordInput \r\n              name='password' \r\n              value={formState.password}  \r\n              onChange={handleChange} \r\n            />\r\n          </div>  \r\n          <div className=\"mb-6\">\r\n            <Input \r\n              type='text' \r\n              name='token' \r\n              placeholder='Введите код из письма' \r\n              value={formState.token} \r\n              onChange={handleChange} \r\n            />\r\n          </div>        \r\n          <Button type='primary' size='medium' >\r\n            Сохранить\r\n          </Button>\r\n        </form>\r\n        <span className=\"text text_type_main-small text_color_inactive\">Вспомнили пароль? <Link to='/login'>Войти</Link></span>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordPage;","import { FC, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../hooks/hooks\";\r\n\r\n// Components\r\nimport { Input, Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// Styles \r\nimport profileFormStyles from './profile-form.module.css';\r\n\r\n// Actions\r\nimport { editUser } from \"../../services/actions/user-actions\";\r\n\r\ninterface IFormState {\r\n  [name: string]: string;\r\n}\r\n\r\nconst ProfileForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(store => store);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [formState, setFormState] = useState<IFormState>({ 'name': user.name, 'email': user.email, 'password': '123456' });\r\n  const [changedFormElements, setChangedFormElements] = useState<Array<string>>([]);\r\n\r\n  useEffect(() => {\r\n    setFormState({ 'name': user.name, 'email': user.email, password: '123456' })\r\n  }, [user]);\r\n\r\n  function onFocusHandler(e: React.FocusEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if ( e.target.name === 'password' ) {\r\n      setFormState({ ...formState, password: '' });\r\n    }\r\n  }\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    setIsEdit(true);\r\n    if(!changedFormElements.includes(e.target.name)) setChangedFormElements([...changedFormElements, e.target.name]);\r\n    setFormState({ ...formState, [e.target.name]: e.target.value});\r\n  }\r\n\r\n  function onSaveHandler(e: React.FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    const body: IFormState = {};\r\n    changedFormElements.forEach( (el) =>  body[el] = formState[el]);\r\n    \r\n    setChangedFormElements([]);\r\n    setIsEdit(false);\r\n    dispatch(editUser(body, localStorage.getItem('accessToken')));\r\n  }\r\n\r\n  function onCancelClickHandler(e: React.SyntheticEvent<Element, Event>): void {\r\n    e.preventDefault();\r\n    setFormState({ 'name': user.name, 'email': user.email, password: '123456' }); \r\n    setIsEdit(false);\r\n  }\r\n\r\n  return (\r\n    <div className={profileFormStyles.propertiesFormWrapper}>\r\n        <form className={`${profileFormStyles.form} mb-20`} onFocus={onFocusHandler} onSubmit={onSaveHandler}>\r\n          <div className=\"mb-6\">\r\n            <Input \r\n              type='text' \r\n              name='name' \r\n              placeholder='Имя' \r\n              value={formState.name} \r\n              icon='EditIcon' \r\n              size='default' \r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <Input \r\n              type='email' \r\n              name='email' \r\n              placeholder='E-mail' \r\n              value={formState.email} \r\n              icon='EditIcon' \r\n              onChange={handleChange} \r\n            />\r\n          </div>\r\n          <div className=\"mb-10\">\r\n            <Input \r\n              type='password' \r\n              name='password' \r\n              placeholder='Пароль' \r\n              value={formState.password} \r\n              icon='EditIcon' \r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {isEdit && (\r\n            <div className={`${profileFormStyles.buttonsWrapper}`}>\r\n              <Button type='secondary' onClick={onCancelClickHandler}>Отмена</Button>\r\n              <Button>Сохранить</Button>\r\n            </div>\r\n            \r\n          )}\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ProfileForm;","\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_START_WITH_TOKEN: 'WS_CONNECTION_START_WITH_TOKEN' = 'WS_CONNECTION_START_WITH_TOKEN';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_CONNECTION_CLOSE: 'WS_CONNECTION_CLOSE' = 'WS_CONNECTION_CLOSE';\r\n\r\nexport interface IWsConnectionStart {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    readonly payload: any;\r\n};\r\n\r\nexport interface IWsConnectionStartWithToken {\r\n    readonly type: typeof WS_CONNECTION_START_WITH_TOKEN;\r\n    readonly payload: any;\r\n};\r\n\r\nexport interface IWsConnectionSuccess {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n    readonly payload: any;\r\n}\r\n\r\nexport interface IWsGetMessage {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    readonly payload: any;\r\n}\r\n\r\nexport interface IWsConnectionClose {\r\n    readonly type: typeof WS_CONNECTION_CLOSE;\r\n    readonly payload: any;\r\n}\r\n\r\nexport type TWsActions = IWsConnectionStart | IWsConnectionStartWithToken | IWsConnectionSuccess | IWsGetMessage | IWsConnectionClose;","import { FC } from \"react\";\r\n\r\n// Styles\r\nimport imageStyle from './orders-ingredient-image.module.css';\r\n\r\ntype TOrdersIngredientImage = {\r\n  src: string;\r\n  zIndex?: number | undefined;\r\n  remainCount?: number | undefined;\r\n}\r\n\r\nconst indexes: Array<string> = ['zIndex1', 'zIndex2', 'zIndex3', 'zIndex4', 'zIndex5', 'zIndex6'];  \r\n\r\n\r\nconst OrdersIngredientImage:FC<TOrdersIngredientImage> = ({src, zIndex, remainCount}) => {\r\n  if(typeof zIndex !== 'undefined') {\r\n    if(zIndex < 6 ) {\r\n      return (\r\n        <div className={`${imageStyle.wrapper} ${imageStyle[indexes[zIndex]]}`}>\r\n          {zIndex === 5 && remainCount && <div className={`${imageStyle.overlay} text text_type_digits-default`}>+{remainCount}</div>}\r\n          <img className={`${imageStyle.image}`} src={src} alt=''/>\r\n        </div>\r\n      ) \r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  return (\r\n    <div className={`${imageStyle.wrapperBlock}`}>\r\n      <img className={`${imageStyle.image}`} src={src} alt=''/>\r\n    </div>\r\n  )\r\n  \r\n};\r\n\r\nexport default OrdersIngredientImage;","import { FC } from \"react\";\r\n\r\n// Styles\r\nimport styles from './status-component.module.css';\r\n\r\ntype TStatusComponentProps = {\r\n  status: string;\r\n}\r\n\r\nconst StatusComponent: FC<TStatusComponentProps> = ({status}) => {\r\n  const displayStatus = (status: string): string => {\r\n    let returnString = '';\r\n    switch (status) {\r\n      case 'done': \r\n        returnString = 'Выполнен';\r\n      break;\r\n      case 'pending': \r\n        returnString = 'Готовится';\r\n      break;\r\n      default: \r\n        returnString = 'Создан';\r\n    }\r\n    return returnString;\r\n  }\r\n  return (\r\n    <div className={`${styles.status} text text_type_main-small ${styles[status]}`}>\r\n        {displayStatus(status)}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default StatusComponent;","import moment from \"moment\";\r\nimport 'moment/locale/ru.js';\r\n\r\nexport function dateOutput(date: string): string {\r\n  const orderTime = moment(new Date(date));\r\n  orderTime.locale('ru');\r\n  let outputDate: string = orderTime.calendar()+ ' i-GMT+3';\r\n\r\n  return outputDate;\r\n}","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport React, { FC } from \"react\";\r\nimport { useSelector } from \"../../hooks/hooks\";\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\nimport { TOrder } from \"../../types/orders\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n// Styles\r\nimport feedOrderStyles from '../feed-order/feed-order.module.css';\r\nimport OrdersIngredientImage from \"../orders-ingredient-image/orders-ingredient-image\";\r\nimport { useLocation } from \"react-router\";\r\nimport StatusComponent from \"../status-component/status-component\";\r\n\r\n// Utils\r\nimport { dateOutput } from '../../utils/time';\r\n\r\ntype TFeedOrdrProps = {\r\n  order: TOrder;\r\n};\r\n\r\nconst FeedOrder: FC<TFeedOrdrProps> = ({order}) => {\r\n  const ingredients = useSelector(store => store.state.ingredients);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const totalCost = order.ingredients.reduce((prev, currEl) => {\r\n    const foundIngredient = ingredients.find((el) => currEl === el._id);\r\n    if(!foundIngredient) return 0;\r\n    if(foundIngredient.type === 'bun') return prev + (foundIngredient!.price*2);\r\n    else return prev + foundIngredient.price; \r\n  }, 0);\r\n\r\n  function clickHandler(e: React.MouseEvent<HTMLDivElement> ) {\r\n    navigate(`${location.pathname}/${order.number}`, {state: {background: location}});\r\n  }\r\n\r\n  return (\r\n    <div className={`${feedOrderStyles.wrapper} p-6 mr-2 mb-4`} onClick={clickHandler}>\r\n      <div className={`${feedOrderStyles.header}`}>\r\n        <span className={`${feedOrderStyles.number} text text_type_main-small`}>\r\n          #{order.number}\r\n        </span>\r\n        <span className={`${feedOrderStyles.date} text text_type_main-small text_color_inactive`}>\r\n          {dateOutput(order.createdAt)/*orderTime.toLocaleString(\"ru\", {day: '2-digit', month: '2-digit', year: '2-digit', hour: '2-digit', minute:'2-digit'})*/}\r\n        </span>\r\n      </div>\r\n      <div className={`${feedOrderStyles.name} text text_type_main-default mt-6`}>\r\n        {order.name}\r\n      </div>\r\n      <StatusComponent status={order.status} />\r\n      <div className={`${feedOrderStyles.burgerInfo} mt-6`}>\r\n        <div className={`${feedOrderStyles.burgerStack}`}>\r\n          {order.ingredients.map((ingredId:string, index: number) => {\r\n            const currentIngredient = ingredients.find((el: DATA_TYPE) => el._id === ingredId);\r\n            if(currentIngredient) return (<OrdersIngredientImage zIndex={index} src={currentIngredient.image} remainCount={order.ingredients.length - index - 1} key={index}/>)\r\n            else return null;\r\n          })}\r\n        </div>\r\n        <div className={`${feedOrderStyles.totalCost} text text_type_digits-default`}>\r\n          <span className=\"mr-1\">{totalCost}</span> <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedOrder;","import { FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../hooks/hooks\";\r\nimport { WS_CONNECTION_START_WITH_TOKEN, WS_CONNECTION_CLOSE } from \"../../services/actions/ws-actions\";\r\nimport { TOrder } from \"../../types/orders\";\r\nimport FeedOrder from \"../feed-order/feed-order\";\r\n\r\n// Styles\r\nimport profileOrdersStyles from './profile-orders.module.css';\r\n\r\nconst ProfileOrders: FC = () => {\r\n  const { orders, wsConnected } = useSelector(store => store.ws);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({type: WS_CONNECTION_START_WITH_TOKEN, payload: ''});\r\n    return () => {\r\n      dispatch({type: WS_CONNECTION_CLOSE, payload: ''})\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  if(typeof orders !== 'undefined' && orders.length) {\r\n    return (\r\n      <div className={`${profileOrdersStyles.scrolledWindow}`}>\r\n        {[...orders].reverse().map((el: TOrder, index: number) => <FeedOrder order={el} key={index} />)}\r\n      </div>\r\n    )\r\n  } else {\r\n    if(!wsConnected) dispatch({type: WS_CONNECTION_START_WITH_TOKEN, payload: ''});\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default ProfileOrders;","import React, { FC } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from '../../hooks/hooks';\r\nimport { useLocation } from 'react-router';\r\n\r\n// Styles\r\nimport profileStyles from './profile.module.css';\r\nimport { logoutRequest } from '../../services/actions/auth-actions';\r\nimport ProfileForm from '../../components/profile-form/profile-form';\r\nimport ProfileOrders from '../../components/profile-orders/profile-orders';\r\n\r\nconst ProfilePage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation(); \r\n  const isOrders = location.pathname.split('/')[2] === 'orders';\r\n\r\n  function logoutHandler(e: React.MouseEvent<HTMLAnchorElement>): void {\r\n    const token = localStorage.getItem('refreshToken')//getCookie('token');\r\n    e.preventDefault();\r\n    dispatch(logoutRequest({ \"token\": token }));\r\n  }\r\n\r\n  return (\r\n    isOrders ?\r\n      <div className={`${profileStyles.profileWrapper}`}>   \r\n        <ul className={`${profileStyles.menuWrapper} mr-15`}>\r\n          <li className={`${profileStyles.listItem}`}><Link className={`${profileStyles.itemLink}`} to='/profile'>Профиль</Link></li>\r\n          <li className={`${profileStyles.listItem} ${profileStyles.activeListItem}`}>История заказов</li>\r\n          <li className={profileStyles.listItem}><Link className={`${profileStyles.itemLink}`} to='/' onClick={logoutHandler}>Выход</Link></li>\r\n          <li className={`${profileStyles.note} mt-20`}>В этом разделе вы можете изменить свои персональные данные</li>\r\n        </ul>\r\n      \r\n        <ProfileOrders />\r\n      </div>\r\n      : \r\n      <div className={`${profileStyles.profileWrapper}`}>\r\n        <ul className={`${profileStyles.menuWrapper} mr-15`}>\r\n          <li className={`${profileStyles.listItem} ${profileStyles.activeListItem}`}>Профиль</li>\r\n          <li className={profileStyles.listItem}><Link className={`${profileStyles.itemLink}`} to='/profile/orders'>История заказов</Link></li>\r\n          <li className={profileStyles.listItem}><Link className={`${profileStyles.itemLink}`} to='/' onClick={logoutHandler}>Выход</Link></li>\r\n          <li className={`${profileStyles.note} mt-20`}>В этом разделе вы можете изменить свои персональные данные</li>\r\n        </ul>\r\n      \r\n        <ProfileForm />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Styles\r\nimport notFoundStyles from './not-found-404.module.css'\r\n\r\nconst NotFound404: FC = () => {\r\n  return (\r\n    <div className={notFoundStyles.noticeWrapper}>\r\n      <span className={notFoundStyles.notice}>Упс... Страница не найдена</span>\r\n      <Link to='/'>Вернуться на главную</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound404;","import React, { FC, useEffect } from \"react\";\r\n\r\n// Styles\r\nimport feedPageStyles from './feed.module.css';\r\n\r\n// Types\r\nimport { TOrder } from \"../../types/orders\";\r\n\r\n// Utils\r\nimport FeedOrder from \"../../components/feed-order/feed-order\";\r\nimport { useDispatch, useSelector } from \"../../hooks/hooks\";\r\nimport { WS_CONNECTION_CLOSE, WS_CONNECTION_START } from \"../../services/actions/ws-actions\";\r\n\r\n\r\n\r\nconst FeedPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {orders, total, totalToday} = useSelector(store => store.ws);\r\n  \r\n  useEffect(() => {\r\n    dispatch({type: WS_CONNECTION_START, payload: ''});\r\n    return () => {\r\n      dispatch({type: WS_CONNECTION_CLOSE, payload: ''})\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (!orders.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`${feedPageStyles.container}`}>\r\n      <div className={`${feedPageStyles.feedHeader} text text_type_main-large pt-8 mb-4`}>Лента заказов</div>\r\n      <div className={`${feedPageStyles.wrapper}`}>\r\n        <section className={`${feedPageStyles.scrolledWindow}`}>\r\n          {orders.map((el: TOrder, index: number) => <FeedOrder order={el} key={index}/>)}\r\n        </section>  \r\n        <section className={`${feedPageStyles.ordersInfoWrapper} ml-15`}>\r\n          <div className={`${feedPageStyles.ordersListsWrapper} mb-15`}>\r\n            <div className={`${feedPageStyles.readyOrdersWrapper} mr-6`}>\r\n              <div className={`text text_type_main-medium mb-6`}>\r\n                Готовы:\r\n              </div>\r\n              <ul className={`${feedPageStyles.readyOrderslist} mr-6`}>\r\n                {orders.filter((el: TOrder) => el.status === 'done').map((el,index) => {\r\n                  return <li className={`${feedPageStyles.readyOrdersListItems} text text_type_digits-default`} key={index}>{el.number}</li>\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className={`${feedPageStyles.inProgressOrdersWrapper}`}>\r\n              <div className=\"text text_type_main-medium  mb-6\">\r\n                В работе:\r\n              </div>\r\n              <ul className={`${feedPageStyles.inProgressOrderslist} mr-6`}>\r\n                {orders.filter((el: TOrder) => el.status === 'pending').map((el,index) => {return <li className={`text text_type_digits-default`} key={index}>{el.number}</li>})}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"text text_type_main-medium mb-15\">\r\n            Выполнено за всё время: <br/> <span className={`${feedPageStyles.number} text text_type_digits-large`}>{total}</span>\r\n          </div>\r\n          <div className=\"text text_type_main-medium\">\r\n            Выполнено за сегодня: <br/> <span className={`${feedPageStyles.number} text text_type_digits-large`}>{totalToday}</span>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default FeedPage;","import React, { FC, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../hooks/hooks\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport ingredientdDetailsStyles from './ingredient-details.module.css';\r\n\r\n// Components\r\n\r\n// Actions\r\nimport { SET_CURRENT_INGREDIENT } from \"../../services/actions/burger-actions\";\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\n\r\n// Data\r\n\r\nconst IngredientDetails: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { ingredients, currentIngredient } = useSelector(store => store.state);\r\n  const location = useLocation();\r\n  const urlId = location.pathname.split('/')[2];\r\n\r\n  useEffect( () => {\r\n    const setCurrentIngredient = () => {\r\n    if(typeof currentIngredient !== 'undefined') {\r\n      if(Object.keys({...currentIngredient}).length === 0 && ingredients.length !== 0) {\r\n        dispatch({ type: SET_CURRENT_INGREDIENT, ingredient: ingredients.find((el: DATA_TYPE) => el._id === urlId)});\r\n        return null;\r\n      }\r\n    }}\r\n\r\n    setCurrentIngredient();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ingredients, currentIngredient]);\r\n\r\n  if(ingredients.length === 0 || currentIngredient === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={ingredientdDetailsStyles.imageWrapper+' mb-4'}>\r\n        <img src={currentIngredient.image_large} alt='ингредиент' />\r\n      </div>\r\n      <div className={ingredientdDetailsStyles.nameWrapper+' mb-8'}>\r\n        <span className=\"text text_type_main-medium\">{currentIngredient.name}</span>\r\n      </div>\r\n      <ul className={ingredientdDetailsStyles.infoWrapper+' mb-15'}>\r\n        <li className={`${ingredientdDetailsStyles.caloriesWrapper} ${ingredientdDetailsStyles.li}`}>\r\n          <span className={ingredientdDetailsStyles.substance+' text text_type_main-default'}>\r\n            Калории, ккал\r\n          </span>\r\n          <span className={ingredientdDetailsStyles.count+' text text_type_digits-default'}>\r\n            {currentIngredient.calories}\r\n          </span>\r\n        </li>\r\n        <li className={ingredientdDetailsStyles.li}>\r\n          <span className={ingredientdDetailsStyles.substance+' text text_type_main-default'}>\r\n            Белки, г\r\n          </span>\r\n          <span className={ingredientdDetailsStyles.count+' text text_type_digits-default'}>\r\n          {currentIngredient!.proteins}\r\n          </span>\r\n        </li>\r\n        <li className={ingredientdDetailsStyles.li}>\r\n          <span className={ingredientdDetailsStyles.substance+' text text_type_main-default'}>\r\n            Жиры, г\r\n          </span>\r\n          <span className={ingredientdDetailsStyles.count+' text text_type_digits-default'}>\r\n          {currentIngredient!.fat}\r\n          </span>\r\n        </li>\r\n        <li className={ingredientdDetailsStyles.li}>\r\n          <span className={ingredientdDetailsStyles.substance+' text text_type_main-default'}>\r\n            Углеводы, г\r\n          </span>\r\n          <span className={ingredientdDetailsStyles.count+' text text_type_digits-default'}>\r\n          {currentIngredient!.carbohydrates}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngredientDetails;\r\n","// Components\r\nimport { FC } from 'react';\r\nimport IngredientDetails from '../../components/ingredient-details/ingredient-details';\r\n\r\n// Styles\r\nimport ingredientStyles from './ingredient.module.css';\r\n\r\nconst IngredientPage: FC = () => {\r\n  return (\r\n    <div className={ingredientStyles.modal} >\r\n      <span className='text text_type_main-large mt-10 mr-10 ml-10'>Детали ингредиента</span>\r\n      <IngredientDetails />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientPage;","import { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../hooks/hooks';\r\nimport { useLocation } from 'react-router';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { checkAuth } from '../../services/actions/auth-actions';\r\nimport { getUser } from '../../services/actions/user-actions';\r\nimport { TLocationWithState } from '../../react-burger-env';\r\n//import { refreshToken } from '../../services/actions/auth-actions';\r\n\r\nexport const ProtectedRoute = ({ children }: { children: JSX.Element }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth } = useSelector((store) => store);\r\n  const location = useLocation() as TLocationWithState;\r\n  \r\n  const init= useCallback(() => {\r\n    dispatch(checkAuth());\r\n    if(localStorage.getItem('accessToken')) {\r\n      \r\n      dispatch(getUser(localStorage.getItem('accessToken')));\r\n    } \r\n    }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init])\r\n\r\n  if(!auth.isAuth) {\r\n    return location.state ?\r\n      <Navigate to='/login' state={{from: location, backgroundProtected: location.state.background}} replace />\r\n    :\r\n      <Navigate to='/login' state={{from: location}} replace />\r\n  }\r\n  return children;\r\n} ","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { FC } from \"react\";\r\nimport { useSelector } from \"../../hooks/hooks\";\r\nimport OrdersIngredientImage from \"../orders-ingredient-image/orders-ingredient-image\";\r\n\r\n// Styles\r\nimport styles from './burger-composition-element.module.css'\r\n\r\ntype TBurgerCompositionElement = {\r\n  className?: string;\r\n  ingredientId: string; \r\n  count: number;\r\n}\r\n\r\nconst BurgerCompositionElement: FC<TBurgerCompositionElement> = ({ ingredientId, count, className }) => {\r\n  const { ingredients } = useSelector(store => store.state);\r\n  const currentIngredient = ingredients.find((el) => el._id === ingredientId);\r\n  if (!currentIngredient) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={`${styles.wrapper} ${className}`}>\r\n      <div className={`${styles.nameWrapper}`}>\r\n        <OrdersIngredientImage src={currentIngredient.image} />\r\n        <div className={`text text_type_main-default ml-4`}>\r\n          {currentIngredient.name}\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.costWrapper} text text_type_digits-default`}>\r\n        <span className={`mr-2`}>{currentIngredient.type === 'bun' ? count*2 : count} x {currentIngredient.price}</span><CurrencyIcon type='primary'/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerCompositionElement;","import { FC } from 'react';\r\n\r\n// Styles\r\nimport styles from './scrolled-container.module.css';\r\n\r\ntype TScrolledContainer = {\r\n  children: JSX.Element | Array<JSX.Element> | null | undefined;\r\n}\r\n\r\nconst ScrolledContainer: FC<TScrolledContainer> = ({ children }) => {\r\n  return (\r\n    <div className={`${styles.scrolledContainer}`}>\r\n      {children}\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default ScrolledContainer;","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { FC, useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport BurgerCompositionElement from '../../components/burger-composition-element/burger-composition-enement';\r\nimport ScrolledContainer from '../../components/scrolled-container/scrolled-container';\r\nimport StatusComponent from '../../components/status-component/status-component';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_START_WITH_TOKEN, WS_CONNECTION_CLOSE } from '../../services/actions/ws-actions';\r\n\r\n// Styles\r\nimport styles from './order-details-page.module.css';\r\n\r\n// Utils\r\nimport { dateOutput } from '../../utils/time';\r\n\r\nconst OrderDetailsPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { orders, wsConnected } = useSelector(store => store.ws);\r\n  const ingredientsAll = useSelector(store => store.state.ingredients);\r\n  const location = useLocation();\r\n  const orderNumber = parseInt(location.pathname.split('/')[location.pathname.split('/').length-1]);\r\n  const section = location.pathname.split('/')[location.pathname.split('/').length-2];\r\n  const currentOrder = orders.find((el) => el.number === orderNumber);\r\n  //const orderTime = !!currentOrder ? new Date(currentOrder.createdAt) : undefined;\r\n\r\n  const totalCost = currentOrder?.ingredients.reduce((prev, currEl) => {\r\n    const foundIngredient = ingredientsAll.find((el) => currEl === el._id);\r\n    if(!foundIngredient) return prev;\r\n    if(foundIngredient.type === 'bun') return prev + (foundIngredient!.price*2);\r\n    else return prev + foundIngredient.price; \r\n  }, 0);\r\n\r\n  const uniqueItemsOf = (arr: Array<string>): Array<{item: string, count: number}> => {\r\n    let uniqueItems: Array<string> = [];\r\n    let result: Array<{item: string, count: number}> = [];\r\n    for(let item of arr) {\r\n      if(!uniqueItems.includes(item)) uniqueItems.push(item);\r\n    }\r\n\r\n    for(let item of uniqueItems) {\r\n      result.push({ item: item, count: arr.filter((el) => el === item).length});\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  const ingredients = !!currentOrder ? uniqueItemsOf(currentOrder.ingredients) : undefined;\r\n\r\n  useEffect(() => {\r\n    if(!wsConnected) {\r\n      if(section === 'feed') {\r\n        dispatch({type: WS_CONNECTION_START, payload: ''});\r\n      } else {\r\n        dispatch({type: WS_CONNECTION_START_WITH_TOKEN, payload: ''});\r\n      }\r\n    }\r\n    return () => {\r\n      if(wsConnected) dispatch({type: WS_CONNECTION_CLOSE, payload: ''});\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  if (!currentOrder || !ingredients) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={`${styles.wrapper} mt-15 mb-15 pl-10 mr-10`}>\r\n      <div className={`${styles.nunber} text text_type_digits-default mb-10`}>#{currentOrder.number}</div>\r\n      <div className={`${styles.name} text text_type_main-medium mb-3`}>{currentOrder.name}</div>\r\n      <StatusComponent status={currentOrder.status} />\r\n      <div className={`${styles.compositionWrapper} mt-15`}>\r\n        <div className={`text text_type_main-medium mb-6`}>Состав:</div>\r\n        <ScrolledContainer>\r\n          {ingredients.map((el, index) => <BurgerCompositionElement className={'mb-4 pr-2'} ingredientId={el.item} count={el.count} key={index}/>)}\r\n        </ScrolledContainer>\r\n      </div>\r\n      <div className={`${styles.footer} mt-10`}> \r\n        <div className={`text text_type_main-default text_color_inactive`}>\r\n          {dateOutput(currentOrder.createdAt)}\r\n        </div>\r\n        <div className={`${styles.totalCost} text text_type_digits-default`}>\r\n          <span className='mr-2'>{totalCost}</span><CurrencyIcon type='primary' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default OrderDetailsPage;","import { useEffect, FC } from 'react';\r\nimport { \r\n  Routes, \r\n  Route,\r\n  useLocation,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport { useDispatch } from '../../hooks/hooks';\r\n\r\n// Components\r\nimport AppHeader from '../app-header/app-header';\r\nimport LoginPage from '../../pages/login/login';\r\nimport ConstructorPage from '../../pages/constructor/constructor';\r\nimport RegisterPage from '../../pages/register/register';\r\nimport ForgotPasswordPage from '../../pages/forgot-password/forgot-password';\r\nimport ResetPasswordPage from '../../pages/reset-password/reset-password';\r\nimport ProfilePage from '../../pages/profile/profile';\r\nimport NotFound404 from '../../pages/not-found-404/not-found-404';\r\nimport FeedPage from '../../pages/feed/feed';\r\nimport IngredientPage from '../../pages/ingredient/ingredient';\r\nimport { ProtectedRoute } from '../protected-route/protected-route';\r\nimport Modal from '../modal/modal';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\n\r\nimport OrderDetailsPage from '../../pages/order-details-page/order-details-page';\r\n\r\n// Actions\r\nimport { CLOSE_MODAL, getIngredients } from \"../../services/actions/burger-actions\";\r\n//import { refreshToken } from '../../services/actions/auth-actions';\r\n\r\n//Styles\r\nimport styles from './app.module.css';\r\nimport { checkAuth } from '../../services/actions/auth-actions';\r\n\r\n// Utils\r\n\r\ninterface ILocationState {\r\n  background: string;\r\n}\r\n\r\nconst App: FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as ILocationState; // Есть ли вариант сделать это как-то иначе?\r\n  const navigate = useNavigate();\r\n  const background = state && state.background;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect( () => {\r\n    //const token = localStorage.getItem('token');//getCookie('token');\r\n\r\n    dispatch(getIngredients());\r\n    dispatch(checkAuth());\r\n    //if(token) dispatch(refreshToken({token}));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  const closeModal = () => {\r\n    dispatch({type: CLOSE_MODAL});\r\n    navigate(state.background);\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.root}`}>\r\n      <AppHeader />\r\n      <Routes location={background || location}>\r\n        <Route path='/login' element={<LoginPage />} />\r\n        <Route path='/register' element={<RegisterPage />} />\r\n        <Route path='/forgot-password' element={<ForgotPasswordPage />} />\r\n        <Route path='/reset-password' element={<ResetPasswordPage />} />\r\n        <Route \r\n          path='/profile' \r\n          element={\r\n            <ProtectedRoute>\r\n              <ProfilePage />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path='/profile/orders' \r\n          element={\r\n            <ProtectedRoute>\r\n              <ProfilePage />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route \r\n          path='/profile/orders/:id' \r\n          element={\r\n            <ProtectedRoute>\r\n              <OrderDetailsPage />\r\n            </ProtectedRoute>\r\n          } \r\n        />\r\n        <Route path='/ingredients/:id' element={<IngredientPage />} />\r\n        <Route path='/feed' element={<FeedPage />} />\r\n        <Route path='/feed/:id' element={<OrderDetailsPage />} />\r\n        \r\n        <Route path=\"/\" element={<ConstructorPage />} />\r\n        <Route element={<NotFound404 />} />\r\n      </Routes>\r\n      {background && <Routes>\r\n        <Route path='/ingredients/:id' element={\r\n          <Modal\r\n            title='Детали ингредиента'\r\n            closeModal={closeModal}\r\n          >\r\n            <IngredientDetails />\r\n          </Modal>\r\n        } />\r\n        <Route path='/profile/orders/:id' element={\r\n          <Modal\r\n            title=''\r\n            closeModal={closeModal}\r\n          >\r\n            <OrderDetailsPage />\r\n          </Modal>\r\n        } />\r\n        <Route path='/feed/:id' element={\r\n          <Modal\r\n            title=''\r\n            closeModal={closeModal}\r\n          >\r\n            <OrderDetailsPage />\r\n          </Modal>\r\n        } />\r\n      </Routes>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { TTabActions, UPDATE_CURRENT_TAB } from \"../actions/constructor-tab-actions\";\r\n\r\ntype TTabElement = {\r\n  id: string;\r\n  title: string;\r\n  ratio: number;\r\n}\r\n\r\nexport type TTabState = {\r\n  tabs: Array<TTabElement> ;\r\n} ;\r\n\r\nconst initialState: TTabState = {\r\n  tabs: [\r\n    {\r\n      id: 'bun',\r\n      title: 'Булки',\r\n      ratio: 0,\r\n    },\r\n    {\r\n      id: 'sauce',\r\n      title: 'Соусы',\r\n      ratio: 0,\r\n    },\r\n    {\r\n      id: 'main',\r\n      title: 'Начинки',\r\n      ratio: 0,\r\n    }\r\n  ]\r\n}\r\n\r\nconst constructorTabReducer = (state = initialState, action: TTabActions): TTabState => {\r\n  switch(action.type) {\r\n    case UPDATE_CURRENT_TAB: {\r\n      const tempState = {...state};\r\n      const index = state.tabs.indexOf(state.tabs.find((el: TTabElement) => el.id === action.id)!);\r\n      tempState.tabs[index].ratio = action.ratio;\r\n      return {\r\n        ...tempState\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default constructorTabReducer;","import {\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_REQUEST_SUCCESS,\r\n  FORGOT_PASSWORD_REQUEST_FAILED,\r\n  FORGOT_PASSWORD_REDIRECT_CLEAR,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_REQUEST_SUCCESS,\r\n  RESET_PASSWORD_REQUEST_FAILED,\r\n  TPasswordActions\r\n} from '../actions/password-actions'\r\n\r\nexport type TPasswordState = {\r\n  forgotPasswordRequest: boolean;\r\n  forgotPasswordRequestFailed: boolean;\r\n  fromForgotPasswordRedirect: boolean;\r\n\r\n  resetPasswordRequest: boolean;\r\n  resetPasswordRequestFailed: boolean;\r\n  fromResetPasswordRedirect: boolean;\r\n};\r\n\r\nconst initialState: TPasswordState ={\r\n  forgotPasswordRequest: false,\r\n  forgotPasswordRequestFailed: false,\r\n  fromForgotPasswordRedirect: false,\r\n\r\n  resetPasswordRequest: false,\r\n  resetPasswordRequestFailed: false,\r\n  fromResetPasswordRedirect: false,\r\n};\r\n\r\nexport function passwordReducer( state = initialState, action: TPasswordActions): TPasswordState {\r\n  switch(action.type) {\r\n    case FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: true\r\n      };\r\n    }\r\n\r\n    case FORGOT_PASSWORD_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordRequestFailed: false,\r\n        fromForgotPasswordRedirect: true,\r\n      };\r\n    }\r\n\r\n    case FORGOT_PASSWORD_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordRequestFailed: true,\r\n      };\r\n    }\r\n\r\n    case FORGOT_PASSWORD_REDIRECT_CLEAR: {\r\n      return {\r\n        ...state,\r\n        fromForgotPasswordRedirect: false,\r\n      }\r\n    }\r\n\r\n    case RESET_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: true\r\n      };\r\n    }\r\n\r\n    case RESET_PASSWORD_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordRequestFailed: false,\r\n        fromResetPasswordRedirect: true,\r\n      };\r\n    }\r\n\r\n    case RESET_PASSWORD_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordRequestFailed: true,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n  \r\n}","import {\r\n  SET_USER,\r\n  RESET_USER,\r\n  GET_USER_REQUEST,\r\n  GET_USER_REQUEST_SUCCESS,\r\n  GET_USER_REQUEST_FAILED,\r\n  SET_IS_USER_LOADED,\r\n  RESET_IS_USER_LOADED, \r\n  TUserActions\r\n } from '../actions/user-actions';\r\n\r\n export type TUserState = {\r\n  getUserRequest: boolean;\r\n  getUserRequestFailed: boolean;\r\n  isUserLoaded: boolean;\r\n  name: string;\r\n  email: string;\r\n};\r\n\r\nconst initialState: TUserState = {\r\n  getUserRequest: false,\r\n  getUserRequestFailed: false,\r\n  isUserLoaded: false,\r\n  name: '',\r\n  email: ''\r\n};\r\n\r\nexport function userReducer(state = initialState, action: TUserActions): TUserState {\r\n  switch(action.type) {\r\n    case SET_USER: {\r\n      return {\r\n        ...state,\r\n        ...action.user\r\n      }\r\n    }\r\n\r\n    case RESET_USER: {\r\n      return {\r\n        ...state,\r\n        name: '',\r\n        email: '',\r\n        isUserLoaded: false\r\n      }\r\n    }\r\n\r\n    case GET_USER_REQUEST: {\r\n      return {\r\n        ...state, \r\n        getUserRequest: true,\r\n      }\r\n    }\r\n\r\n    case GET_USER_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state, \r\n        getUserRequest: false,\r\n        getUserRequestFailed: false,\r\n        isUserLoaded: true,\r\n      }\r\n    }\r\n\r\n    case GET_USER_REQUEST_FAILED: {\r\n      return {\r\n        ...state, \r\n        getUserRequest: false,\r\n        getUserRequestFailed: true\r\n      }\r\n    }\r\n\r\n    case SET_IS_USER_LOADED: {\r\n      return {\r\n        ...state,\r\n        isUserLoaded: true,\r\n      }\r\n    }\r\n\r\n    case RESET_IS_USER_LOADED: {\r\n      return {\r\n        ...state,\r\n        isUserLoaded: false,\r\n      }\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}","import {\r\n  SET_IS_AUTH,\r\n  RESET_IS_AUTH,\r\n  REFRESH_TOKEN_REQUEST,\r\n  REFRESH_TOKEN_REQUEST_SUCCESS,\r\n  REFRESH_TOKEN_REQUEST_FAILED,\r\n  LOGIN_REQUEST,\r\n  LOGIN_REQUEST_REQUEST_SUCCESS,\r\n  LOGIN_REQUEST_REQUEST_FAILED,\r\n  TAuthActions,\r\n} from '../actions/auth-actions';\r\n\r\nexport type TAuthState = {\r\n  isAuth: boolean;\r\n  accessToken: string;\r\n\r\n  refreshTokenRequest: boolean;\r\n  refreshTokenRequestFailed: boolean;\r\n\r\n  loginRequest: boolean;\r\n  loginRequestFailed: boolean;\r\n  fromLoginRedirect: boolean;\r\n};\r\n\r\nconst initialState: TAuthState ={\r\n  isAuth: false,\r\n  accessToken: '',\r\n\r\n  refreshTokenRequest: false,\r\n  refreshTokenRequestFailed: false,\r\n\r\n  loginRequest: false,\r\n  loginRequestFailed: false,\r\n  fromLoginRedirect: false,\r\n\r\n};\r\n\r\nexport const authReducer = (state = initialState, action: TAuthActions): TAuthState => {\r\n  switch(action.type) {\r\n    case SET_IS_AUTH: {\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        //accessToken: action.accessToken\r\n      }\r\n    }\r\n\r\n    case RESET_IS_AUTH: {\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        fromLoginRedirect: false,\r\n        accessToken: '',\r\n      }\r\n    }\r\n\r\n    case REFRESH_TOKEN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: true,\r\n        refreshTokenRequestFailed: false,\r\n      }\r\n    }\r\n\r\n    case REFRESH_TOKEN_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenRequestFailed: false,\r\n      }\r\n    }\r\n\r\n    case REFRESH_TOKEN_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenRequestFailed: true,\r\n      }\r\n    }\r\n\r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loginRequest: true,\r\n      };\r\n    }\r\n\r\n    case LOGIN_REQUEST_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginRequestFailed: false,\r\n        fromLoginRedirect: true\r\n      };\r\n    }\r\n\r\n    case LOGIN_REQUEST_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginRequestFailed: true,\r\n      };\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}","import {\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_REQUEST_SUCCESS,\r\n  REGISTER_USER_REQUEST_FAILED,\r\n  TRegisterActions,\r\n} from '../actions/register-actions'\r\n\r\ntype TRegisterState = {\r\n  registerUserRequest: boolean;\r\n  registerUserRequestFailed: boolean;\r\n};\r\n\r\nconst initialState: TRegisterState ={\r\n  registerUserRequest: false,\r\n  registerUserRequestFailed: false,\r\n};\r\n\r\nexport function registerReducer( state = initialState, action: TRegisterActions ): TRegisterState {\r\n  switch(action.type) {\r\n    case REGISTER_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        registerUserRequest: true,\r\n      };\r\n    }\r\n\r\n    case REGISTER_USER_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        registerUserRequest: false,\r\n        registerUserRequestFailed: false,\r\n      };\r\n    }\r\n\r\n    case REGISTER_USER_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        registerUserRequest: false,\r\n        registerUserRequestFailed: true,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n  \r\n}","import { TOrderActions } from \"../actions/order-actions\";\r\n\r\ntype TOrderState = {\r\n\r\n}\r\n\r\nconst initialState: TOrderState = {\r\n\r\n};\r\n\r\nconst orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\r\n    switch(action.type) {\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default orderReducer;","import { TOrder } from '../../types/orders';\r\nimport { TWsActions, WS_CONNECTION_CLOSE, WS_CONNECTION_START, WS_GET_MESSAGE } from './../actions/ws-actions';\r\n\r\ntype TWsState = {\r\n    wsConnected: boolean;\r\n    orders: Array<TOrder>;\r\n    total: number;\r\n    totalToday: number;\r\n}\r\n\r\nconst initialState:TWsState = {\r\n    wsConnected: false,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0,\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: TWsActions): TWsState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_START: {\r\n            return {\r\n                ...state,\r\n                wsConnected: true,\r\n            }\r\n        }\r\n        case WS_CONNECTION_CLOSE: {\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n            }\r\n        }\r\n        case WS_GET_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday,\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Reducers\r\nimport constructorTabReducer from \"./constuctor-tab-reducer\";\r\nimport { passwordReducer } from \"./password-reducer\";\r\nimport { userReducer } from \"./user-reducer\";\r\nimport { authReducer } from \"./auth-reducer\";\r\nimport { registerReducer } from \"./register-reducer\";\r\nimport orderReducer from \"./order-reducer\";\r\nimport { wsReducer } from './ws-reducer';\r\n\r\n// Actions\r\nimport {\r\n  ADD_INGREDIENT, \r\n  DELETE_INGREDIENT,\r\n  SET_BURGER_NAME,\r\n  SET_CURRENT_INGREDIENT,\r\n  UPDATE_BURGER_INGREDIENTS,\r\n  GET_INGREDIENTS_API_REQUEST,\r\n  GET_INGREDIENTS_API_REQUEST_SUCCESS,\r\n  GET_INGREDIENTS_API_REQUEST_FAILED,\r\n  POST_ORDER_REQUEST,\r\n  POST_ORDER_REQUEST_SUCCESS,\r\n  POST_ORDER_REQUEST_FAILED,\r\n  OPEN_INGREDIENTS_MODAL, \r\n  OPEN_ORDER_MODAL,\r\n  CLOSE_MODAL,\r\n  TBurgerActions\r\n} from '../actions/burger-actions';\r\nimport { DATA_TYPE } from \"../../react-burger-env\";\r\n\r\n\r\nexport type TBurgerState = {\r\n  bun: DATA_TYPE | null;\r\n  ingredients: Array<{index: number, item: DATA_TYPE}>;\r\n  ingredientsCounts: Array<{count: number, type: string, id: string}>;\r\n  name: string;\r\n  totalPrice: number;\r\n};\r\n\r\nexport type TState = {\r\n  ingredients: Array<DATA_TYPE>;\r\n  burger: TBurgerState;\r\n  currentIngredient: DATA_TYPE | null;\r\n\r\n  order: {\r\n    number: number | null;\r\n  };\r\n\r\n  modal: {\r\n    isModalOpen: boolean;\r\n    isIngredModal: boolean;\r\n    isOrderModal: boolean;\r\n  },\r\n\r\n  section: string;\r\n\r\n  ingredientsRequest: boolean;\r\n  ingredientsRequestFailed: boolean;\r\n\r\n  orderPostRequest: boolean;\r\n  orderPostRequestFailed: boolean;\r\n};\r\n\r\nconst initialState: TState = {\r\n  ingredients: [],\r\n  burger: {\r\n    bun: null,\r\n    ingredients: [],\r\n    ingredientsCounts: [],\r\n    name: '',\r\n    totalPrice: 0\r\n  },\r\n  currentIngredient: null,\r\n\r\n  order: {\r\n    number: null,\r\n  },\r\n\r\n  modal: {\r\n    isModalOpen: false,\r\n    isIngredModal: false,\r\n    isOrderModal: false,\r\n  },\r\n\r\n  section: 'constructor',\r\n\r\n  ingredientsRequest: false,\r\n  ingredientsRequestFailed: false,\r\n\r\n  orderPostRequest: false,\r\n  orderPostRequestFailed: false,\r\n}\r\n\r\nfunction addIngredient(burger: TBurgerState, ingredient: DATA_TYPE) {\r\n  let burgerState = {...burger};\r\n  if (ingredient.type === 'bun') {\r\n    burgerState.bun = ingredient;\r\n    burgerState.ingredientsCounts = burgerState.ingredientsCounts.filter(el => el.type !== 'bun');\r\n    burgerState.ingredientsCounts.push({count: 2, type: ingredient.type, id: ingredient._id});\r\n\r\n  } else {\r\n    const currentItem = burgerState.ingredients.find((el) => el.item._id === ingredient._id);\r\n    burgerState.ingredients.push({index: burgerState.ingredients.length, item: ingredient}); \r\n    if(!currentItem) {\r\n      //const newItem = {count: 1, id: ingredient._id};\r\n      \r\n      burgerState.ingredientsCounts.push({count: 1, type: ingredient.type, id: ingredient._id});\r\n    } else {\r\n      //const currentId = burgerState.ingredients[burgerState.ingredients.indexOf(currentItem)]._id;\r\n      if(typeof burgerState.ingredientsCounts.find(el => el.id === ingredient._id) !== 'undefined') {\r\n        burgerState.ingredientsCounts.find(el => el.id === ingredient._id)!.count++;\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  if (burgerState.bun === null) burgerState.bun = {price: 0} as DATA_TYPE;\r\n\r\n  burgerState.totalPrice = (!!burgerState.bun.price ? burgerState.bun.price : 0) * 2 + \r\n      (!!burgerState.ingredients \r\n      ? \r\n      burgerState.ingredients.reduce((previousValue, currentItem) => {\r\n        return previousValue + currentItem.item.price\r\n      }, 0) \r\n      : \r\n      0);\r\n  \r\n  return burgerState;\r\n}\r\n\r\nconst stateReducer = (state = initialState, action: TBurgerActions): TState => {\r\n  switch (action.type) {\r\n    case ADD_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        burger: addIngredient(state.burger, action.ingredient),\r\n      }\r\n    }\r\n    case DELETE_INGREDIENT: {\r\n      const tempState = {...state};\r\n      const currentItemPrice = tempState.burger.ingredients[action.index].item.price;\r\n      tempState.burger.ingredients.splice(action.index, 1);\r\n      \r\n      const currentIndex = tempState.burger.ingredientsCounts.findIndex(el => el.id === action.id);\r\n      let currentCount = tempState.burger.ingredientsCounts[currentIndex].count;\r\n      //tempState.burger.ingredientsCounts[currentIndex].count--;\r\n      if(currentCount > 1) { \r\n        currentCount--;\r\n        tempState.burger.ingredientsCounts[currentIndex].count = currentCount;\r\n      } else {\r\n        tempState.burger.ingredientsCounts.splice(currentIndex, 1);\r\n      } \r\n      tempState.burger.totalPrice = tempState.burger.totalPrice - currentItemPrice;\r\n\r\n      return tempState;\r\n    }\r\n    case SET_CURRENT_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        currentIngredient: action.ingredient,\r\n      }\r\n    }\r\n    case UPDATE_BURGER_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        burger: {\r\n          ...state.burger,\r\n          ingredients: action.burger,\r\n        }\r\n      }\r\n    }\r\n    case SET_BURGER_NAME: {\r\n      return {\r\n        ...state,\r\n        burger: {\r\n          ...state.burger,\r\n          name: action.name,\r\n        }\r\n      }\r\n    }\r\n    case GET_INGREDIENTS_API_REQUEST: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: true,\r\n      }\r\n    }\r\n    case GET_INGREDIENTS_API_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredientsRequestFailed: false,\r\n        ingredients: action.ingredients,\r\n        \r\n      }\r\n    }\r\n    case GET_INGREDIENTS_API_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredientsRequestFailed: true,\r\n      }\r\n    }\r\n    case POST_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderPostRequest: true,\r\n      }\r\n    }\r\n    case POST_ORDER_REQUEST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderPostRequest: false,\r\n        orderPostRequestFailed: false,\r\n        burger: {\r\n          ...initialState.burger,\r\n          ingredients: [],\r\n          ingredientsCounts: [],\r\n        },\r\n        order: {\r\n          ...state.order,\r\n          number: action.orderNumber,\r\n        } \r\n        \r\n      }\r\n    }\r\n    case POST_ORDER_REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderPostRequest: false,\r\n        orderPostRequestFailed: true,\r\n      }\r\n    }\r\n    case OPEN_INGREDIENTS_MODAL: {\r\n      return {\r\n        ...state,\r\n        modal: {\r\n          ...state.modal,\r\n          isModalOpen: true,\r\n          isIngredModal: true,\r\n        }\r\n      }\r\n    }\r\n    case OPEN_ORDER_MODAL: {\r\n      return {\r\n        ...state,\r\n        modal: {\r\n          ...state.modal,\r\n          isModalOpen: true,\r\n          isOrderModal: true,\r\n        }\r\n      }\r\n    }\r\n    case CLOSE_MODAL: {\r\n      return {\r\n        ...state,\r\n        currentIngredient: null,\r\n        modal: {\r\n          ...state.modal,\r\n          isModalOpen: false,\r\n          isIngredModal: false,\r\n          isOrderModal: false,\r\n        }\r\n      }\r\n    }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  state: stateReducer,\r\n  tabsState: constructorTabReducer,\r\n  password: passwordReducer, \r\n  user: userReducer,\r\n  auth: authReducer,\r\n  register: registerReducer,\r\n  order: orderReducer,\r\n  ws: wsReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport './index.css';\r\nimport './fonts/fonts.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport rootReducer from './services/reducers';\r\nimport { socketMiddleware } from './redux/middleware/socket-middleware';\r\nimport { WS_API_URL } from './utils/url';\r\nimport { WS_CONNECTION_CLOSE, WS_CONNECTION_START, WS_CONNECTION_START_WITH_TOKEN, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from './services/actions/ws-actions';\r\nimport { TMiddlewareWsActions } from './types/ws';\r\n\r\nconst wsActions: TMiddlewareWsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsInitWithToken: WS_CONNECTION_START_WITH_TOKEN,\r\n  wsClose: WS_CONNECTION_CLOSE,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onMessage: WS_GET_MESSAGE\r\n}\r\n\r\nconst composedEnhancers = composeWithDevTools(applyMiddleware(thunkMiddleware, socketMiddleware(`${WS_API_URL}/orders`, wsActions)));\r\n\r\nexport const store = createStore(rootReducer, composedEnhancers);\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { AppDispatch, TRootState } from \"../../types\";\r\nimport { TWsActions } from \"../../services/actions/ws-actions\";\r\nimport { TMiddlewareWsActions } from \"../../types/ws\";\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: TMiddlewareWsActions): Middleware => {\r\n    return ((store: MiddlewareAPI<AppDispatch, TRootState>) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => (action: TWsActions) => {\r\n            const {dispatch} = store;\r\n            const { type } = action;\r\n            const { wsInit, wsInitWithToken, wsClose, onOpen, onMessage } = wsActions;\r\n\r\n            if (type === wsInit) {\r\n                // объект класса WebSocket\r\n                socket = new WebSocket(`${wsUrl}/all`);\r\n            }\r\n            \r\n            if (type === wsInitWithToken) {\r\n                socket = new WebSocket(`${wsUrl}?token=${localStorage.getItem('accessToken')!.split(' ')[1]}`);\r\n            }\r\n\r\n            if ( socket ) {\r\n                if(type === wsClose) socket.close(1000, 'Closed by user');\r\n\r\n                socket.onopen = (event: Event) => {\r\n                    dispatch({type: onOpen, payload: event});\r\n                }\r\n\r\n                socket.onmessage = (event: MessageEvent) => {\r\n                    const data = JSON.parse(event.data);\r\n                    dispatch({ type: onMessage, payload: data});\r\n                }\r\n\r\n                socket.onclose = (event: Event) => {\r\n                    console.log('WS connection closed');\r\n                }\r\n            }\r\n            next(action);\r\n        }\r\n    }) as Middleware;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructorWrapper\":\"burger-constructor_burgerConstructorWrapper__2aMX8\",\"totalWrapper\":\"burger-constructor_totalWrapper__3idcj\",\"total\":\"burger-constructor_total__Q3Gph\",\"innerWrapper\":\"burger-constructor_innerWrapper__9VarB\",\"bunConstructor\":\"burger-constructor_bunConstructor__1jIm6\",\"dropTarget\":\"burger-constructor_dropTarget__3OzR5\",\"buttonWrapper\":\"burger-constructor_buttonWrapper__1GAX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feed-order_wrapper__2LGEf\",\"header\":\"feed-order_header__qpUA4\",\"burgerInfo\":\"feed-order_burgerInfo__17sUN\",\"burgerStack\":\"feed-order_burgerStack__3UGNp\",\"totalCost\":\"feed-order_totalCost__2MUVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"order-details_number__3NZdr\",\"preloaderText\":\"order-details_preloaderText__1kS4g\",\"textRow2\":\"order-details_textRow2__1jIpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"orders-ingredient-image_wrapper__15aiX\",\"wrapperBlock\":\"orders-ingredient-image_wrapperBlock__3IT9m orders-ingredient-image_wrapper__15aiX\",\"zIndex1\":\"orders-ingredient-image_zIndex1__1HImQ\",\"zIndex2\":\"orders-ingredient-image_zIndex2__2fWkR\",\"zIndex3\":\"orders-ingredient-image_zIndex3__26a3H\",\"zIndex4\":\"orders-ingredient-image_zIndex4__3ERzz\",\"zIndex5\":\"orders-ingredient-image_zIndex5__2-iKF\",\"zIndex6\":\"orders-ingredient-image_zIndex6__Kopyl\",\"overlay\":\"orders-ingredient-image_overlay__yZi6f\",\"image\":\"orders-ingredient-image_image__pLYbk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-details-page_wrapper__1-YR4\",\"name\":\"order-details-page_name__1MCsu\",\"compositionWrapper\":\"order-details-page_compositionWrapper__1M48E\",\"footer\":\"order-details-page_footer__3B26h\",\"totalCost\":\"order-details-page_totalCost__25t_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"burger-ingredients_table__4jZhS\",\"burgerIngredientsWrapper\":\"burger-ingredients_burgerIngredientsWrapper__16-BR\",\"scrolledWindow\":\"burger-ingredients_scrolledWindow__27Vho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"ingredients-item_itemWrapper__1vRR5\",\"price\":\"ingredients-item_price__1w8x6\",\"count\":\"ingredients-item_count__nFf5z\",\"link\":\"ingredients-item_link__2q-Zq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"modal_modalWrapper__9vyXy\",\"modalHeader\":\"modal_modalHeader__1z-e4\",\"closeButtonWrapper\":\"modal_closeButtonWrapper__nK5P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"propertiesFormWrapper\":\"profile-form_propertiesFormWrapper__1V0LF\",\"form\":\"profile-form_form__MTwai\",\"menuWrapper\":\"profile-form_menuWrapper__1htD-\",\"listItem\":\"profile-form_listItem__11PhD\",\"activeListItem\":\"profile-form_activeListItem__HZDid\",\"itemLink\":\"profile-form_itemLink__vyoCW\",\"note\":\"profile-form_note__2lA42\",\"buttonsWrapper\":\"profile-form_buttonsWrapper__pC6XU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-composition-element_wrapper__2Ac_B\",\"nameWrapper\":\"burger-composition-element_nameWrapper__3ukxG\",\"costWrapper\":\"burger-composition-element_costWrapper__1xlXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"login_loginFormWrapper__mJ3KD\",\"form\":\"login_form__30FpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typeWrapper\":\"ingredients-type_typeWrapper__CQDyG\",\"itemsWrapper\":\"ingredients-type_itemsWrapper__3XVLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"register_loginFormWrapper__3Nv-z\",\"form\":\"register_form__19yd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"forgot-password_loginFormWrapper__MR5We\",\"form\":\"forgot-password_form__3MxHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"reset-password_loginFormWrapper__3lqmd\",\"form\":\"reset-password_form__1YsMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"done\":\"status-component_done__1A586\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeWrapper\":\"not-found-404_noticeWrapper__tPgWl\",\"notice\":\"not-found-404_notice__3bxZc\"};"],"sourceRoot":""}